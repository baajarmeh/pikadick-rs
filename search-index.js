var searchIndex = JSON.parse('{\
"deviantart":{"doc":"","i":[[0,"client","deviantart","Client",null,null],[3,"Client","deviantart::client","A DeviantArt Client",null,null],[11,"new","","Make a new [<code>Client</code>].",0,[[]]],[11,"search","","Search for deviations",0,[[["str",15]]]],[11,"get_oembed","","OEmbed API",0,[[["url",3]]]],[11,"download_deviation","","Download a [<code>Deviation</code>].",0,[[["deviation",3]]]],[0,"types","deviantart","Api Types",null,null],[3,"SearchResults","deviantart::types","DeviantArt Search Results",null,null],[12,"deviations","","Deviations",1,null],[12,"unknown","","Unknown K/Vs",1,null],[3,"Deviation","","A Deviation",null,null],[12,"author","","DeviantArt Author",2,null],[12,"block_reasons","","?",2,null],[12,"deviation_id","","Deviation ID",2,null],[12,"kind","","Deviation Type",2,null],[12,"url","","Image Url",2,null],[12,"media","","Media Info",2,null],[12,"unknown","","Unknown K/Vs",2,null],[11,"get_media_url","","Get the media url for this [<code>Deviation</code>].",2,[[],[["option",4],["url",3]]]],[11,"get_download_url","","Get the download url for this [<code>Deviation</code>].",2,[[],[["option",4],["url",3]]]],[11,"get_fullview_url","","Get the fullview url for this [<code>Deviation</code>].",2,[[],[["option",4],["url",3]]]],[11,"get_gif_url","","Get the GIF url for this [<code>Deviation</code>].",2,[[],[["option",4],["url",3]]]],[11,"is_image","","Whether this is an image",2,[[],["bool",15]]],[3,"DeviationMedia","","The media field of a [<code>Deviation</code>].",null,null],[12,"base_uri","","The base uri",3,null],[12,"token","","Image token",3,null],[12,"types","","Types",3,null],[12,"pretty_name","","Pretty Name",3,null],[12,"unknown","","Unknown K/Vs",3,null],[11,"get_fullview_media_type","","Try to get the fullview [<code>MediaType</code>].",3,[[],[["option",4],["mediatype",3]]]],[3,"MediaType","","DeviantArt [<code>DeviationMedia</code>] media type.",null,null],[12,"content","","The content. A uri used with base_uri.",4,null],[12,"height","","Image Height",4,null],[12,"kind","","?",4,null],[12,"width","","Image Width",4,null],[12,"b","","?",4,null],[12,"unknown","","Unknown K/Vs",4,null],[11,"is_fullview","","Whether this is the fullview",4,[[],["bool",15]]],[3,"OEmbed","","DeviantArt OEmbed",null,null],[12,"url","","Url of the asset",5,null],[12,"thumbnail_url","","Url of the thumbnail",5,null],[12,"unknown","","Unknown K/Vs",5,null],[4,"Error","deviantart","Library Error",null,null],[13,"Reqwest","","Reqwest HTTP Error",6,null],[13,"InvalidStatus","","Invalid HTTP Status Code",6,null],[13,"Url","","Invalid Url",6,null],[13,"TokioJoin","","A tokio task panicked",6,null],[13,"MissingMediaToken","","Missing media token",6,null],[13,"Io","","Io Error",6,null],[11,"from","deviantart::client","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","deviantart::types","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","deviantart","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",6,[[["error",3]]]],[11,"from","","",6,[[["parseerror",4]]]],[11,"from","","",6,[[["joinerror",3]]]],[11,"from","","",6,[[["error",3]]]],[11,"clone","deviantart::client","",0,[[],["client",3]]],[11,"default","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","deviantart::types","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","deviantart","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"source","","",6,[[],[["error",8],["option",4]]]],[11,"deserialize","deviantart::types","",1,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"deserialize","","",5,[[],["result",4]]]],"p":[[3,"Client"],[3,"SearchResults"],[3,"Deviation"],[3,"DeviationMedia"],[3,"MediaType"],[3,"OEmbed"],[4,"Error"]]},\
"fml":{"doc":"","i":[[0,"client","fml","",null,null],[3,"Client","fml::client","An FML Client",null,null],[11,"new","","Make a new Client from an api_key",0,[[["string",3]]]],[11,"list_random","","Get a list of random articles",0,[[["usize",15]]]],[0,"types","fml","",null,null],[4,"ApiResponse","fml::types","",null,null],[13,"Err","","",1,null],[12,"error","fml::types::ApiResponse","",2,null],[13,"Ok","fml::types","",1,null],[12,"data","fml::types::ApiResponse","",3,null],[12,"unknown","","",3,null],[3,"Article","fml::types","",null,null],[12,"apikey","","",4,null],[12,"area","","",4,null],[12,"author","","",4,null],[12,"bitly","","",4,null],[12,"city","","",4,null],[12,"content","","",4,null],[12,"content_hidden","","",4,null],[12,"country","","",4,null],[12,"countrycode","","",4,null],[12,"created","","",4,null],[12,"flag","","",4,null],[12,"gender","","",4,null],[12,"id","","",4,null],[12,"images","","",4,null],[12,"ip","","",4,null],[12,"keywords","","",4,null],[12,"layout","","",4,null],[12,"metrics","","",4,null],[12,"openview","","",4,null],[12,"origin","","",4,null],[12,"paragraphs","","",4,null],[12,"published","","",4,null],[12,"site","","",4,null],[12,"siteorig","","",4,null],[12,"slug","","",4,null],[12,"social_truncate","","",4,null],[12,"spicy","","",4,null],[12,"status","","",4,null],[12,"title","","",4,null],[12,"article_type","","",4,null],[12,"updated","","",4,null],[12,"url","","",4,null],[12,"user","","",4,null],[12,"usermetrics","","",4,null],[12,"videos","","",4,null],[12,"vote","","",4,null],[12,"unknown","","",4,null],[3,"ArticleImage","","",null,null],[12,"copyright","","",5,null],[12,"height","","",5,null],[12,"legend","","",5,null],[12,"name","","",5,null],[12,"url","","",5,null],[12,"usage","","",5,null],[12,"width","","",5,null],[12,"unknown","","",5,null],[3,"ArticleKeyword","","",null,null],[12,"label","","",6,null],[12,"rub","","",6,null],[12,"uid","","",6,null],[12,"unknown","","",6,null],[3,"ArticleMetrics","","",null,null],[12,"article","","",7,null],[12,"comment","","",7,null],[12,"favorite","","",7,null],[12,"mod_negative","","",7,null],[12,"mod_positive","","",7,null],[12,"reports","","",7,null],[12,"smiley_amusing","","",7,null],[12,"smiley_funny","","",7,null],[12,"smiley_hilarious","","",7,null],[12,"smiley_weird","","",7,null],[12,"votes_down","","",7,null],[12,"votes_up","","",7,null],[12,"unknown","","",7,null],[3,"ArticleUsermetrics","","",null,null],[12,"favorite","","",8,null],[12,"smiley","","",8,null],[12,"votes","","",8,null],[12,"unknown","","",8,null],[4,"Error","fml","Error type",null,null],[13,"Reqwest","","Reqwest HTTP Error",9,null],[13,"InvalidStatus","","Invalid HTTP Status",9,null],[13,"Json","","Invalid Json",9,null],[13,"Api","","Invalid Api Error",9,null],[6,"FmlResult","","Result Type",null,null],[11,"from","fml::client","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","fml::types","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","fml","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",9,[[["error",3]]]],[11,"from","","",9,[[["error",3]]]],[11,"clone","fml::client","",0,[[],["client",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","fml::types","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","fml","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"source","","",9,[[],[["error",8],["option",4]]]],[11,"deserialize","fml::types","",1,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"deserialize","","",5,[[],["result",4]]],[11,"deserialize","","",6,[[],["result",4]]],[11,"deserialize","","",7,[[],["result",4]]],[11,"deserialize","","",8,[[],["result",4]]]],"p":[[3,"Client"],[4,"ApiResponse"],[13,"Err"],[13,"Ok"],[3,"Article"],[3,"ArticleImage"],[3,"ArticleKeyword"],[3,"ArticleMetrics"],[3,"ArticleUsermetrics"],[4,"Error"]]},\
"insta":{"doc":"","i":[[3,"OpenGraphObject","insta","An OpenGraphObject.",null,null],[12,"title","","Object Title",0,null],[12,"kind","","Object Type/Kind",0,null],[12,"image","","Object Image Url",0,null],[12,"url","","Object Permanent Url",0,null],[12,"audio_url","","Audio Url",0,null],[12,"description","","Object Description",0,null],[12,"video_url","","Video Url",0,null],[6,"InstaResult","","Result type",null,null],[4,"InstaError","","Error type",null,null],[13,"OpenGraphClient","","Failed to fetch and decode an [<code>OpenGraphObject</code>].",1,null],[3,"Client","","A Client",null,null],[12,"client","","The inner open graph client.",2,null],[11,"new","","Make a new [<code>Client</code>].",2,[[]]],[11,"get_post","","Get a post by url.",2,[[["str",15]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"equivalent","","",0,[[],["bool",15]]],[11,"get_hash","","",0,[[],["u64",15]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",0,[[]]],[11,"clone","","",0,[[],["opengraphobject",3]]],[11,"eq","","",0,[[["opengraphobject",3]],["bool",15]]],[11,"ne","","",0,[[["opengraphobject",3]],["bool",15]]],[11,"from_str","","",0,[[["str",15]],[["result",4],["opengraphobject",3]]]],[11,"from","","",1,[[["clienterror",4]]]],[11,"clone","","",2,[[],["client",3]]],[11,"default","","",2,[[]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"source","","",1,[[],[["option",4],["error",8]]]],[11,"from_html","","Make a new [<code>OpenGraphObject</code>] from [<code>Html</code>].",0,[[["html",3]],[["opengraphobject",3],["fromhtmlerror",4],["result",4]]]],[11,"is_video","","Check whether this is a video",0,[[],["bool",15]]],[11,"is_image","","Check whether this is an image",0,[[],["bool",15]]],[11,"get_image_file_name","","Try to get the video url\'s file name",0,[[],[["str",15],["option",4]]]],[11,"get_video_url_file_name","","Try to get the video url\'s file name",0,[[],[["str",15],["option",4]]]]],"p":[[3,"OpenGraphObject"],[4,"InstaError"],[3,"Client"]]},\
"minimax":{"doc":"","i":[[0,"tic_tac_toe","minimax","Built-in tic-tac-toe support",null,null],[4,"WinType","minimax::tic_tac_toe","The win type",null,null],[13,"Horizontal","","",0,null],[13,"Vertical","","",0,null],[13,"Diagonal","","",0,null],[13,"AntiDiagonal","","",0,null],[3,"WinnerInfo","","Winner Info",null,null],[12,"team","","The winning team",1,null],[12,"tile_indexes","","The tile_indexes that are part of the win.",1,null],[12,"win_type","","The win type",1,null],[11,"start_tile_index","","Get the least tile index",1,[[],["u8",15]]],[11,"end_tile_index","","Get the highest tile index",1,[[],["u8",15]]],[3,"TicTacToeState","","A Tic-Tac-Toe game state",null,null],[11,"new","","Make a new starting Tic-Tac-Toe board state",2,[[]]],[11,"iter","","Iterate over the tiles",2,[[],["tictactoeiter",3]]],[11,"at","","Get the tile at the index.",2,[[["u8",15]],[["tictactoeteam",4],["option",4]]]],[11,"try_at","","Get the tile at the index, returning None on error.",2,[[["u8",15]],[["option",4],["option",4]]]],[11,"set","","Set the tile at the index, returning the old tile. Panics …",2,[[["tictactoeteam",4],["option",4],["u8",15]],[["tictactoeteam",4],["option",4]]]],[11,"try_set","","Set the tile at the index, returning the old tile if …",2,[[["tictactoeteam",4],["option",4],["u8",15]],[["option",4],["option",4]]]],[11,"get_team_turn","","Get whos turn it is.",2,[[],["tictactoeteam",4]]],[11,"get_winning_team","","Get the winning team, if there is one.",2,[[],[["tictactoeteam",4],["option",4]]]],[11,"get_winning_info","","Get the winning info, if there was a winner.",2,[[],[["option",4],["winnerinfo",3]]]],[11,"is_tie","","Check if a game state is a tie",2,[[],["bool",15]]],[11,"get_child_states","","Get the child states for this game",2,[[],["vec",3]]],[11,"into_u16","","Convert this into a [<code>u16</code>].",2,[[],["u16",15]]],[3,"TicTacToeRuleSet","","Tic-Tac-Toe RuleSet",null,null],[3,"TicTacToeIter","","An <code>Iterator</code> over a Tic-Tac-Toe board.",null,null],[11,"new","","Make a new [<code>TicTacToeIter</code>].",3,[[["u16",15]]]],[4,"TicTacToeTeam","","The teams of Tic-Tac-Toe.",null,null],[13,"X","","",4,null],[13,"O","","",4,null],[3,"InvalidCharError","","Failed to parse a [<code>TicTacToeTeam</code>] from a [<code>char</code>].",null,null],[12,"0","","",5,null],[4,"InvalidStrError","","Failed to parse a [<code>TicTacToeTeam</code>] from a [<code>str</code>].",null,null],[13,"InvalidLength","","The string is the wrong length. It must contain exactly …",6,null],[13,"InvalidChar","","The char is not valid.",6,null],[11,"inverse","","Invert the teams",4,[[]]],[11,"from_char","","Try to parse a [<code>TicTacToeTeam</code>] from a [<code>char</code>].",4,[[["char",15]],[["invalidcharerror",3],["result",4]]]],[8,"RuleSet","minimax","An abstract set of rules for a game.",null,null],[16,"State","","The game state",7,null],[16,"Team","","The game teams",7,null],[10,"get_start_state","","Get the starting node for minimax-ing.",7,[[]]],[10,"get_team","","Get the team from a [<code>Self::State</code>].",7,[[]]],[10,"get_winner","","Get the winner for a [<code>Self::State</code>].",7,[[],["option",4]]],[10,"get_child_states","","Get the child states for a given [<code>Self::State</code>].",7,[[],["vec",3]]],[10,"score_winner","","Score a node\'s score based on a winner",7,[[["i8",15]]]],[10,"score_state","","Score a state.",7,[[],["i8",15]]],[10,"choose_best_state","","Choose the best state for a given state and team.",7,[[["i8",15]]]],[5,"compile_minimax_map","","Compile a minimax map with a [<code>RuleSet</code>].",null,[[],[["hashmap",3],["node",3]]]],[3,"Node","","A Node in a game graph.",null,null],[11,"from_state","","Make a new [<code>Node</code>] from a <code>State</code>.",8,[[]]],[3,"MiniMaxAi","","A type that can use a compiled minimax map.",null,null],[11,"new","","Make a new [<code>MiniMaxAi</code>].",9,[[["hashmap",3],["node",3]]]],[11,"get_node","","Get a [<code>Node</code>] from a game state.",9,[[],[["node",3],["option",4]]]],[11,"get_move","","Get a move for a given team and state.",9,[[],["option",4]]],[11,"get_score","","Get the score for a state",9,[[],[["i8",15],["option",4]]]],[11,"from","minimax::tic_tac_toe","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"into_iter","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","minimax","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"get_start_state","minimax::tic_tac_toe","",10,[[]]],[11,"get_team","","",10,[[]]],[11,"get_winner","","",10,[[],["option",4]]],[11,"get_child_states","","",10,[[],["vec",3]]],[11,"score_winner","","",10,[[["i8",15]]]],[11,"score_state","","",10,[[],["i8",15]]],[11,"choose_best_state","","",10,[[["i8",15]]]],[11,"from","","",6,[[["invalidcharerror",3]]]],[11,"next","","",3,[[],["option",4]]],[11,"clone","","",0,[[],["wintype",4]]],[11,"clone","","",1,[[],["winnerinfo",3]]],[11,"clone","","",2,[[],["tictactoestate",3]]],[11,"clone","","",4,[[],["tictactoeteam",4]]],[11,"clone","","",5,[[],["invalidcharerror",3]]],[11,"clone","","",6,[[],["invalidstrerror",4]]],[11,"clone","minimax","",8,[[],["node",3]]],[11,"default","minimax::tic_tac_toe","",2,[[]]],[11,"eq","","",2,[[["tictactoestate",3]],["bool",15]]],[11,"ne","","",2,[[["tictactoestate",3]],["bool",15]]],[11,"eq","","",4,[[["tictactoeteam",4]],["bool",15]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","minimax","",8,[[["formatter",3]],["result",6]]],[11,"fmt","minimax::tic_tac_toe","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"hash","","",2,[[]]],[11,"hash","","",4,[[]]],[11,"from_str","","",4,[[["str",15]],["result",4]]],[11,"source","","",6,[[],[["error",8],["option",4]]]]],"p":[[4,"WinType"],[3,"WinnerInfo"],[3,"TicTacToeState"],[3,"TicTacToeIter"],[4,"TicTacToeTeam"],[3,"InvalidCharError"],[4,"InvalidStrError"],[8,"RuleSet"],[3,"Node"],[3,"MiniMaxAi"],[3,"TicTacToeRuleSet"]]},\
"nekos":{"doc":"","i":[[3,"Client","nekos","Client for nekos.moe",null,null],[3,"Image","","Neko images",null,null],[12,"id","","Image id",0,null],[12,"artist","","Artist",0,null],[12,"nsfw","","Whether this is nsfw",0,null],[12,"tags","","Tags",0,null],[12,"likes","","of likes",0,null],[12,"favorites","","of favorites",0,null],[12,"uploader","","The uploader",0,null],[12,"approver","","The approver",0,null],[12,"comments","","Comments",0,null],[12,"original_hash","","unknown",0,null],[12,"created_at","","created date",0,null],[12,"unknown","","Unknown data",0,null],[3,"ImageList","","A list of neko images",null,null],[12,"images","","Images list",1,null],[12,"unknown","","Unknown data",1,null],[3,"Url","","A parsed URL record.",null,null],[6,"NekosResult","","Nekos result type",null,null],[4,"NekosError","","Nekos lib error",null,null],[13,"Reqwest","","Reqwest HTTP Error",2,null],[13,"InvalidStatus","","Invalid HTTP Status",2,null],[13,"Json","","Invalid JSON",2,null],[13,"InvalidUrl","","Invalid URL",2,null],[13,"Io","","Io Error",2,null],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"equivalent","","",4,[[],["bool",15]]],[11,"get_hash","","",4,[[],["u64",15]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"try_from","","",4,[[["str",15]],[["result",4],["url",3]]]],[11,"fmt","","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",4,[[]]],[11,"index","","",4,[[["rangeto",3],["position",4]],["str",15]]],[11,"index","","",4,[[["range",3],["position",4]],["str",15]]],[11,"index","","",4,[[["rangefrom",3],["position",4]],["str",15]]],[11,"index","","",4,[[["rangefull",3]],["str",15]]],[11,"partial_cmp","","",4,[[["url",3]],[["option",4],["ordering",4]]]],[11,"deserialize","","",4,[[],[["result",4],["url",3]]]],[11,"as_ref","","",4,[[],["str",15]]],[11,"clone","","",4,[[],["url",3]]],[11,"cmp","","",4,[[["url",3]],["ordering",4]]],[11,"eq","","",4,[[["url",3]],["bool",15]]],[11,"from_str","","",4,[[["str",15]],[["parseerror",4],["result",4],["url",3]]]],[11,"serialize","","",4,[[],["result",4]]],[11,"into_url","","",4,[[],[["result",4],["error",3],["url",3]]]],[11,"from","","",2,[[["error",3]]]],[11,"from","","",2,[[["error",3]]]],[11,"from","","",2,[[["parseerror",4]]]],[11,"from","","",2,[[["error",3]]]],[11,"clone","","",3,[[],["client",3]]],[11,"clone","","",1,[[],["imagelist",3]]],[11,"clone","","",0,[[],["image",3]]],[11,"default","","",3,[[]]],[11,"eq","","",0,[[["image",3]],["bool",15]]],[11,"ne","","",0,[[["image",3]],["bool",15]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"source","","",2,[[],[["option",4],["error",8]]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"serialize","","",0,[[],["result",4]]],[11,"new","","Make a new client",3,[[]]],[11,"get_random","","Get a random list of catgirls. count is a num from 0 < …",3,[[["bool",15],["u8",15],["option",4]]]],[11,"copy_res_to","","Get a url and copy it to the given writer",3,[[["url",3],["write",8]]]],[11,"get_url","","Get the url",0,[[],[["parseerror",4],["result",4],["url",3]]]],[11,"parse","","Parse an absolute URL from a string.",4,[[["str",15]],[["parseerror",4],["result",4],["url",3]]]],[11,"parse_with_params","","Parse an absolute URL from a string and add params to its …",4,[[["str",15]],[["parseerror",4],["result",4],["url",3]]]],[11,"join","","Parse a string as an URL, with this URL as the base URL.",4,[[["str",15]],[["parseerror",4],["result",4],["url",3]]]],[11,"options","","Return a default <code>ParseOptions</code> that can fully configure …",4,[[],["parseoptions",3]]],[11,"as_str","","Return the serialization of this URL.",4,[[],["str",15]]],[11,"into_string","","Return the serialization of this URL.",4,[[],["string",3]]],[11,"origin","","Return the origin of this URL (…",4,[[],["origin",4]]],[11,"scheme","","Return the scheme of this URL, lower-cased, as an ASCII …",4,[[],["str",15]]],[11,"has_authority","","Return whether the URL has an \'authority\', which can …",4,[[],["bool",15]]],[11,"cannot_be_a_base","","Return whether this URL is a cannot-be-a-base URL, …",4,[[],["bool",15]]],[11,"username","","Return the username for this URL (typically the empty …",4,[[],["str",15]]],[11,"password","","Return the password for this URL, if any, as a …",4,[[],[["str",15],["option",4]]]],[11,"has_host","","Equivalent to <code>url.host().is_some()</code>.",4,[[],["bool",15]]],[11,"host_str","","Return the string representation of the host (domain or …",4,[[],[["str",15],["option",4]]]],[11,"host","","Return the parsed representation of the host for this URL.…",4,[[],[["host",4],["option",4]]]],[11,"domain","","If this URL has a host and it is a domain name (not an IP …",4,[[],[["str",15],["option",4]]]],[11,"port","","Return the port number for this URL, if any.",4,[[],[["option",4],["u16",15]]]],[11,"port_or_known_default","","Return the port number for this URL, or the default port …",4,[[],[["option",4],["u16",15]]]],[11,"socket_addrs","","Resolve a URL’s host and port number to <code>SocketAddr</code>.",4,[[],[["result",4],["vec",3],["error",3]]]],[11,"path","","Return the path for this URL, as a percent-encoded ASCII …",4,[[],["str",15]]],[11,"path_segments","","Unless this URL is cannot-be-a-base, return an iterator …",4,[[],[["option",4],["split",3]]]],[11,"query","","Return this URL’s query string, if any, as a …",4,[[],[["str",15],["option",4]]]],[11,"query_pairs","","Parse the URL’s query string, if any, as …",4,[[],["parse",3]]],[11,"fragment","","Return this URL’s fragment identifier, if any.",4,[[],[["str",15],["option",4]]]],[11,"set_fragment","","Change this URL’s fragment identifier.",4,[[["option",4],["str",15]]]],[11,"set_query","","Change this URL’s query string.",4,[[["option",4],["str",15]]]],[11,"query_pairs_mut","","Manipulate this URL’s query string, viewed as a …",4,[[],[["urlquery",3],["serializer",3]]]],[11,"set_path","","Change this URL’s path.",4,[[["str",15]]]],[11,"path_segments_mut","","Return an object with methods to manipulate this URL’s …",4,[[],[["pathsegmentsmut",3],["result",4]]]],[11,"set_port","","Change this URL’s port number.",4,[[["option",4],["u16",15]],["result",4]]],[11,"set_host","","Change this URL’s host.",4,[[["option",4],["str",15]],[["result",4],["parseerror",4]]]],[11,"set_ip_host","","Change this URL’s host to the given IP address.",4,[[["ipaddr",4]],["result",4]]],[11,"set_password","","Change this URL’s password.",4,[[["option",4],["str",15]],["result",4]]],[11,"set_username","","Change this URL’s username.",4,[[["str",15]],["result",4]]],[11,"set_scheme","","Change this URL’s scheme.",4,[[["str",15]],["result",4]]],[11,"from_file_path","","Convert a file name as <code>std::path::Path</code> into an URL in the …",4,[[],[["result",4],["url",3]]]],[11,"from_directory_path","","Convert a directory name as <code>std::path::Path</code> into an URL …",4,[[],[["result",4],["url",3]]]],[11,"serialize_internal","","Serialize with Serde using the internal representation of …",4,[[],["result",4]]],[11,"deserialize_internal","","Serialize with Serde using the internal representation of …",4,[[],[["result",4],["url",3]]]],[11,"to_file_path","","Assuming the URL is in the <code>file</code> scheme or similar, …",4,[[],[["result",4],["pathbuf",3]]]]],"p":[[3,"Image"],[3,"ImageList"],[4,"NekosError"],[3,"Client"],[3,"Url"]]},\
"open_graph":{"doc":"https://ogp.me/","i":[[0,"open_graph_object","open_graph","[<code>OpenGraphObject</code>]",null,null],[4,"FromHtmlError","open_graph::open_graph_object","An error that may occur while parsing an [<code>OpenGraphObject</code>]…",null,null],[13,"MissingTitle","","Missing title field",0,null],[13,"MissingType","","Missing Type field",0,null],[13,"MissingImage","","Missing Image field",0,null],[13,"InvalidImage","","Invalid Image field",0,null],[13,"MissingUrl","","Missing Url field",0,null],[13,"InvalidUrl","","Invalid Image field",0,null],[13,"InvalidAudioUrl","","Invalid Audio Url",0,null],[13,"InvalidVideoUrl","","Invalid Video Url",0,null],[13,"Unimplemented","","Ran into unimplemented functionality",0,null],[3,"OpenGraphObject","","An OpenGraphObject.",null,null],[12,"title","","Object Title",1,null],[12,"kind","","Object Type/Kind",1,null],[12,"image","","Object Image Url",1,null],[12,"url","","Object Permanent Url",1,null],[12,"audio_url","","Audio Url",1,null],[12,"description","","Object Description",1,null],[12,"video_url","","Video Url",1,null],[11,"from_html","","Make a new [<code>OpenGraphObject</code>] from [<code>Html</code>].",1,[[["html",3]],[["result",4],["fromhtmlerror",4]]]],[11,"is_video","","Check whether this is a video",1,[[],["bool",15]]],[11,"is_image","","Check whether this is an image",1,[[],["bool",15]]],[11,"get_image_file_name","","Try to get the video url\'s file name",1,[[],[["option",4],["str",15]]]],[11,"get_video_url_file_name","","Try to get the video url\'s file name",1,[[],[["option",4],["str",15]]]],[0,"client","open_graph","A generic open graph client",null,null],[4,"ClientError","open_graph::client","An error that may occur while using a [<code>Client</code>].",null,null],[13,"Reqwest","","A reqwest HTTP error",2,null],[13,"InvalidStatus","","Invalid HTTP Status",2,null],[13,"JokioJoin","","A tokio task failed",2,null],[13,"InvalidOpenGraphObject","","The [<code>OpenGraphObject</code>] was invalid",2,null],[13,"Io","","An IO Error occured",2,null],[13,"MissingVideoUrl","","An OGP object is missing a video url",2,null],[13,"UnsupportedObjectKind","","An OGP object has an unknown object kind",2,null],[3,"Client","","A generic open graph protocol client",null,null],[12,"client","","The inner HTTP Client.",3,null],[11,"new","","Make a new [<code>Client</code>]",3,[[]]],[11,"from_client","","Make a new [<code>Client</code>] from a [<code>reqwest::Client</code>].",3,[[["client",3]]]],[11,"get_object","","Get an [<code>OpenGraphObject</code>] by url.",3,[[["str",15]]]],[11,"get_and_copy_to","","Convenience function for getting data and copying it into …",3,[[["str",15]]]],[11,"download_object_to","","Best-effort function to download an [<code>OpenGraphObject</code>] and …",3,[[["opengraphobject",3]]]],[3,"Html","open_graph","An HTML tree.",null,null],[12,"errors","","Parse errors.",4,null],[12,"quirks_mode","","The quirks mode.",4,null],[12,"tree","","The node tree.",4,null],[11,"from","open_graph::open_graph_object","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"equivalent","","",1,[[],["bool",15]]],[11,"get_hash","","",1,[[],["u64",15]]],[11,"from","open_graph::client","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","open_graph","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"equivalent","","",4,[[],["bool",15]]],[11,"fmt","","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"finish","","",4,[[],["html",3]]],[11,"parse_error","","",4,[[["str",15],["cow",4]]]],[11,"set_quirks_mode","","",4,[[["quirksmode",4]]]],[11,"get_document","","",4,[[]]],[11,"same_node","","",4,[[],["bool",15]]],[11,"elem_name","","",4,[[],["expandedname",3]]],[11,"create_element","","",4,[[["vec",3],["elementflags",3],["qualname",3],["global",3],["attribute",3]]]],[11,"create_comment","","",4,[[["nonatomic",3],["tendril",3],["utf8",3]]]],[11,"append_doctype_to_document","","",4,[[["nonatomic",3],["tendril",3],["utf8",3]]]],[11,"append","","",4,[[["nodeortext",4]]]],[11,"append_before_sibling","","",4,[[["nodeortext",4]]]],[11,"remove_from_parent","","",4,[[]]],[11,"reparent_children","","",4,[[]]],[11,"add_attrs_if_missing","","",4,[[["vec",3],["global",3],["attribute",3]]]],[11,"get_template_contents","","",4,[[]]],[11,"mark_script_already_started","","",4,[[]]],[11,"create_pi","","",4,[[["nonatomic",3],["tendril",3],["utf8",3]]]],[11,"append_based_on_parent_node","","",4,[[["nodeortext",4]]]],[11,"clone","","",4,[[],["html",3]]],[11,"eq","","",4,[[["html",3]],["bool",15]]],[11,"ne","","",4,[[["html",3]],["bool",15]]],[11,"from","open_graph::client","",2,[[["error",3]]]],[11,"from","","",2,[[["joinerror",3]]]],[11,"from","","",2,[[["fromhtmlerror",4]]]],[11,"from","","",2,[[["error",3]]]],[11,"clone","open_graph::open_graph_object","",1,[[],["opengraphobject",3]]],[11,"clone","open_graph::client","",3,[[],["client",3]]],[11,"default","","",3,[[]]],[11,"eq","open_graph::open_graph_object","",1,[[["opengraphobject",3]],["bool",15]]],[11,"ne","","",1,[[["opengraphobject",3]],["bool",15]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","open_graph::client","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","open_graph::open_graph_object","",0,[[["formatter",3]],["result",6]]],[11,"fmt","open_graph::client","",2,[[["formatter",3]],["result",6]]],[11,"hash","open_graph::open_graph_object","",1,[[]]],[11,"from_str","","",1,[[["str",15]],["result",4]]],[11,"source","open_graph::client","",2,[[],[["error",8],["option",4]]]],[11,"new_document","open_graph","Creates an empty HTML document.",4,[[],["html",3]]],[11,"new_fragment","","Creates an empty HTML fragment.",4,[[],["html",3]]],[11,"parse_document","","Parses a string of HTML as a document.",4,[[["str",15]],["html",3]]],[11,"parse_fragment","","Parses a string of HTML as a fragment.",4,[[["str",15]],["html",3]]],[11,"select","","Returns an iterator over elements matching a selector.",4,[[["selector",3]],["select",3]]],[11,"root_element","","Returns the root <code><html></code> element.",4,[[],["elementref",3]]]],"p":[[4,"FromHtmlError"],[3,"OpenGraphObject"],[4,"ClientError"],[3,"Client"],[3,"Html"]]},\
"pikadick":{"doc":"","i":[[0,"checks","pikadick","",null,null],[0,"admin","pikadick::checks","Admin Check",null,null],[7,"ADMIN_CHECK","pikadick::checks::admin","",null,null],[5,"admin_check","","",null,[[["context",3],["args",3],["commandoptions",3],["message",3]],[["result",4],["boxfuture",6]]]],[0,"enabled","pikadick::checks","Enabled Check",null,null],[6,"MutexGuard","pikadick::checks::enabled","",null,null],[3,"EnabledCheckData","","",null,null],[12,"command_name_cache","","The set of all commands as strings.",0,null],[12,"command_lookup","","A way to look up commands by CommandOptions and fn addr.",0,null],[11,"new","","Make a new [<code>EnabledCheckData</code>].",0,[[]]],[11,"add_groups","","Add a group to have its commands enabled/disabled.",0,[[]]],[11,"get_command_name_from_options","","",0,[[["commandoptions",3]],[["string",3],["option",4]]]],[11,"get_command_names","","Returns a mutex guard to the list of command names.",0,[[],[["vec",3],["rawmutex",3],["mutexguard",3]]]],[5,"checks_are_same","","Check if 2 [<code>Check</code>]s are the same.",null,[[["check",3]],["bool",15]]],[7,"ENABLED_CHECK","","",null,null],[5,"enabled_check","","",null,[[["context",3],["args",3],["commandoptions",3],["message",3]],[["result",4],["boxfuture",6]]]],[0,"client_data","pikadick","",null,null],[3,"CacheStatsBuilder","pikadick::client_data","A tool to build cache stats",null,null],[12,"stats","","",1,null],[11,"new","","Make a new [<code>CacheStatsBuilder</code>].",1,[[]]],[11,"publish_stat","","Publish a stat to a section",1,[[["str",15],["f32",15]]]],[11,"into_inner","","Get the inner stats",1,[[],[["btreemap",3],["str",15],["btreemap",3]]]],[8,"CacheStatsProvider","","A type that can provide cache stats",null,null],[10,"publish_cache_stats","","Publish stats to the provided [<code>CacheStatsBuilder</code>].",2,[[["cachestatsbuilder",3]]]],[3,"ClientData","","The [<code>ClientData</code>].",null,null],[12,"shard_manager","","The discord shard_manager",3,null],[12,"nekos_client","","The client for nekos",3,null],[12,"r6stats_client","","The R6Stats client",3,null],[12,"r6tracker_client","","The r6tracker client",3,null],[12,"rule34_client","","The rule34 client",3,null],[12,"quizizz_client","","The quizizz client",3,null],[12,"fml_client","","The fml client",3,null],[12,"shift_client","","The shift client",3,null],[12,"reddit_embed_data","","The reddit embed data",3,null],[12,"enabled_check_data","","The enabled check data",3,null],[12,"insta_client","","The insta client data",3,null],[12,"deviantart_client","","The deviantart client",3,null],[12,"urban_client","","The urban dictionary client",3,null],[12,"xkcd_client","","The xkcd client",3,null],[12,"tic_tac_toe_data","","The tic tac toe data",3,null],[12,"db","","The database",3,null],[12,"config","","The config",3,null],[11,"init","","Init this client data",3,[[["arc",3],["mutex",3],["database",3],["config",3]]]],[11,"generate_cache_stats","","Generate cache stats Currently, In order for something to …",3,[[],[["btreemap",3],["str",15],["btreemap",3]]]],[0,"commands","pikadick","",null,null],[0,"cache_stats","pikadick::commands","",null,null],[7,"CACHE_STATS_COMMAND_OPTIONS","pikadick::commands::cache_stats","",null,null],[7,"CACHE_STATS_COMMAND","","",null,null],[5,"cache_stats","","",null,[[["context",3],["args",3],["message",3]],[["commandresult",6],["boxfuture",6]]]],[0,"cmd","pikadick::commands","",null,null],[7,"CMD_COMMAND_OPTIONS","pikadick::commands::cmd","",null,null],[7,"CMD_COMMAND","","",null,null],[5,"cmd","","",null,[[["context",3],["args",3],["message",3]],[["commandresult",6],["boxfuture",6]]]],[7,"LIST_COMMAND_OPTIONS","","",null,null],[7,"LIST_COMMAND","","",null,null],[5,"list","","",null,[[["context",3],["args",3],["message",3]],[["commandresult",6],["boxfuture",6]]]],[0,"deviantart","pikadick::commands","",null,null],[3,"DeviantartClient","pikadick::commands::deviantart","A caching deviantart client",null,null],[12,"client","","",4,null],[12,"search_cache","","",4,null],[11,"new","","Make a new [<code>DeviantartClient</code>].",4,[[]]],[11,"search","","Search for deviantart images with a cache.",4,[[["str",15]]]],[7,"DEVIANTART_COMMAND_OPTIONS","","",null,null],[7,"DEVIANTART_COMMAND","","",null,null],[5,"deviantart","","",null,[[["context",3],["args",3],["message",3]],[["commandresult",6],["boxfuture",6]]]],[0,"fml","pikadick::commands","",null,null],[3,"FmlClient","pikadick::commands::fml","A caching fml client",null,null],[12,"client","","",5,null],[12,"cache","","",5,null],[11,"new","","Make a new FmlClient",5,[[["string",3]]]],[11,"repopulate","","Repopulate the cache",5,[[]]],[11,"should_repopulate","","",5,[[],["bool",15]]],[11,"get_entry","","",5,[[],[["article",3],["option",4]]]],[7,"FML_COMMAND_OPTIONS","","",null,null],[7,"FML_COMMAND","","",null,null],[5,"fml","","",null,[[["context",3],["args",3],["message",3]],[["commandresult",6],["boxfuture",6]]]],[0,"insta_dl","pikadick::commands","",null,null],[7,"INSTA_DL_COMMAND_OPTIONS","pikadick::commands::insta_dl","",null,null],[7,"INSTA_DL_COMMAND","","",null,null],[5,"insta_dl","","",null,[[["context",3],["args",3],["message",3]],[["commandresult",6],["boxfuture",6]]]],[0,"invite","pikadick::commands","",null,null],[7,"INVITE_COMMAND_OPTIONS","pikadick::commands::invite","",null,null],[7,"INVITE_COMMAND","","",null,null],[5,"invite","","",null,[[["context",3],["args",3],["message",3]],[["commandresult",6],["boxfuture",6]]]],[0,"latency","pikadick::commands","",null,null],[7,"LATENCY_COMMAND_OPTIONS","pikadick::commands::latency","",null,null],[7,"LATENCY_COMMAND","","",null,null],[5,"latency","","",null,[[["context",3],["args",3],["message",3]],[["commandresult",6],["boxfuture",6]]]],[0,"nekos","pikadick::commands","",null,null],[17,"BUFFER_SIZE","pikadick::commands::nekos","Max images per single request",null,null],[3,"NsfwArgParseError","","",null,null],[3,"NsfwArg","","",null,null],[3,"Cache","","",null,null],[12,"0","","",6,null],[11,"new","","",6,[[]]],[11,"primary_len","","",6,[[],["usize",15]]],[11,"secondary_len","","",6,[[],["usize",15]]],[11,"primary_is_empty","","",6,[[],["bool",15]]],[11,"secondary_is_empty","","",6,[[],["bool",15]]],[11,"add","","",6,[[["url",3]]]],[11,"add_many","","",6,[[["iterator",8]]]],[11,"get_rand","","",6,[[]]],[3,"CacheInner","","",null,null],[12,"primary","","",7,null],[12,"secondary","","",7,null],[3,"NekosClient","","",null,null],[12,"client","","",8,null],[12,"cache","","",8,null],[12,"nsfw_cache","","",8,null],[11,"new","","",8,[[]]],[11,"get_cache","","",8,[[["bool",15]],["cache",3]]],[11,"populate","","",8,[[["bool",15]]]],[11,"get_rand","","",8,[[["bool",15]]]],[7,"NEKOS_COMMAND_OPTIONS","","",null,null],[7,"NEKOS_COMMAND","","",null,null],[5,"nekos","","",null,[[["context",3],["args",3],["message",3]],[["commandresult",6],["boxfuture",6]]]],[0,"ping","pikadick::commands","",null,null],[7,"PING_COMMAND_OPTIONS","pikadick::commands::ping","",null,null],[7,"PING_COMMAND","","",null,null],[5,"ping","","",null,[[["context",3],["args",3],["message",3]],[["commandresult",6],["boxfuture",6]]]],[0,"quizizz","pikadick::commands","",null,null],[17,"MAX_TRIES","pikadick::commands::quizizz","",null,null],[17,"MAX_CODE","","",null,null],[3,"QuizizzClient","","",null,null],[12,"client","","",9,null],[11,"new","","",9,[[]]],[7,"QUIZIZZ_COMMAND_OPTIONS","","",null,null],[7,"QUIZIZZ_COMMAND","","",null,null],[5,"quizizz","","",null,[[["context",3],["args",3],["message",3]],[["commandresult",6],["boxfuture",6]]]],[0,"r6stats","pikadick::commands","",null,null],[3,"R6StatsClient","pikadick::commands::r6stats","",null,null],[12,"client","","",10,null],[12,"search_cache","","",10,null],[11,"new","","",10,[[]]],[11,"get_stats","","Get stats",10,[[["str",15]]]],[7,"R6STATS_COMMAND_OPTIONS","","",null,null],[7,"R6STATS_COMMAND","","",null,null],[5,"r6stats","","",null,[[["context",3],["args",3],["message",3]],[["commandresult",6],["boxfuture",6]]]],[0,"r6tracker","pikadick::commands","",null,null],[3,"Stats","pikadick::commands::r6tracker","R6Tracker stats for a user",null,null],[12,"overwolf_player","","",11,null],[12,"profile","","",11,null],[3,"R6TrackerClient","","",null,null],[12,"client","","",12,null],[12,"search_cache","","",12,null],[11,"new","","Make a new r6 client with caching",12,[[]]],[11,"get_stats","","Get R6Tracker stats",12,[[["str",15]]]],[7,"R6TRACKER_COMMAND_OPTIONS","","",null,null],[7,"R6TRACKER_COMMAND","","",null,null],[5,"r6tracker","","",null,[[["context",3],["args",3],["message",3]],[["commandresult",6],["boxfuture",6]]]],[0,"reddit_embed","pikadick::commands","",null,null],[6,"SubReddit","pikadick::commands::reddit_embed","",null,null],[6,"PostId","","",null,null],[17,"DATA_STORE_NAME","","",null,null],[3,"URL_REGEX","","Source: https://urlregex.com/",null,null],[12,"__private_field","","",13,null],[3,"RedditEmbedData","","",null,null],[12,"reddit_client","","",14,null],[12,"reddit_tube_client","","",14,null],[12,"cache","","",14,null],[11,"new","","",14,[[]]],[11,"parse_post_url","","Gets the subreddit and post id from a reddit url and …",14,[[["url",3]],["option",4]]],[11,"get_original_post","","Gets the original post. Resolves crossposts.",14,[[["str",15]]]],[11,"get_video_data","","Get video data from reddit.tube. Takes a reddit url.",14,[[["url",3]]]],[11,"process_msg","","Process a message and insert an embed if neccesary",14,[[["message",3],["context",3]]]],[4,"GetPostError","","",null,null],[13,"Reddit","","",15,null],[13,"MissingPost","","",15,null],[4,"GetVideoDataError","","",null,null],[13,"RedditTube","","",16,null],[13,"InvalidResponse","","",16,null],[7,"REDDIT_EMBED_COMMAND_OPTIONS","","",null,null],[7,"REDDIT_EMBED_COMMAND","","",null,null],[5,"reddit_embed","","",null,[[["context",3],["args",3],["message",3]],[["commandresult",6],["boxfuture",6]]]],[0,"rule34","pikadick::commands","",null,null],[3,"Rule34Client","pikadick::commands::rule34","A caching rule34 client",null,null],[12,"client","","",17,null],[12,"search_cache","","",17,null],[12,"post_cache","","",17,null],[11,"new","","Make a new [<code>Rule34Client</code>].",17,[[],["rule34client",3]]],[11,"search","","Search for a query.",17,[[["str",15]]]],[11,"get_post","","Get the [<code>Post</code>] for a given post id.",17,[[["u64",15]]]],[7,"RULE34_COMMAND_OPTIONS","","",null,null],[7,"RULE34_COMMAND","","",null,null],[5,"rule34","","",null,[[["context",3],["args",3],["message",3]],[["commandresult",6],["boxfuture",6]]]],[0,"shift","pikadick::commands","",null,null],[3,"GameParseError","pikadick::commands::shift","",null,null],[12,"0","","",18,null],[3,"GameArg","","",null,null],[12,"0","","",19,null],[3,"ShiftClient","","",null,null],[12,"orcz_client","","",20,null],[12,"cache","","",20,null],[11,"new","","",20,[[]]],[11,"get_rand","","Get a random shift code (PC only for now...)",20,[[["game",4]]]],[7,"SHIFT_COMMAND_OPTIONS","","",null,null],[7,"SHIFT_COMMAND","","",null,null],[5,"shift","","",null,[[["context",3],["args",3],["message",3]],[["commandresult",6],["boxfuture",6]]]],[0,"system","pikadick::commands","",null,null],[5,"epoch_nanos_to_local_datetime","pikadick::commands::system","",null,[[["u64",15]],[["datetime",3],["local",3]]]],[5,"fmt_uptime","","",null,[[["duration",3]],["string",3]]],[5,"fmt_memory","","",null,[[["memory",3]],["string",3]]],[5,"fmt_swap","","",null,[[["swap",3]],["string",3]]],[5,"fmt_cpu_frequency","","",null,[[["frequency",6]],["string",3]]],[5,"get_cpu_usage","","",null,[[]]],[7,"SYSTEM_COMMAND_OPTIONS","","",null,null],[7,"SYSTEM_COMMAND","","",null,null],[5,"system","","",null,[[["context",3],["args",3],["message",3]],[["commandresult",6],["boxfuture",6]]]],[0,"tic_tac_toe","pikadick::commands","",null,null],[0,"board","pikadick::commands::tic_tac_toe","",null,null],[7,"BOARD_COMMAND_OPTIONS","pikadick::commands::tic_tac_toe::board","",null,null],[7,"BOARD_COMMAND","","",null,null],[5,"board","","",null,[[["context",3],["args",3],["message",3]],[["commandresult",6],["boxfuture",6]]]],[0,"concede","pikadick::commands::tic_tac_toe","",null,null],[7,"CONCEDE_COMMAND_OPTIONS","pikadick::commands::tic_tac_toe::concede","",null,null],[7,"CONCEDE_COMMAND","","",null,null],[5,"concede","","",null,[[["context",3],["args",3],["message",3]],[["commandresult",6],["boxfuture",6]]]],[0,"play","pikadick::commands::tic_tac_toe","",null,null],[7,"PLAY_COMMAND_OPTIONS","pikadick::commands::tic_tac_toe::play","",null,null],[7,"PLAY_COMMAND","","",null,null],[5,"play","","",null,[[["context",3],["args",3],["message",3]],[["commandresult",6],["boxfuture",6]]]],[0,"tic_tac_toe_renderer","pikadick::commands::tic_tac_toe","",null,null],[17,"FONT_BYTES","pikadick::commands::tic_tac_toe::tic_tac_toe_renderer","",null,null],[17,"RENDERED_SIZE","","",null,null],[17,"SQUARE_SIZE","","",null,null],[17,"SQUARE_SIZE_USIZE","","",null,null],[17,"SQUARE_SIZE_F32","","",null,null],[17,"HALF_SQUARE_SIZE_F32","","",null,null],[17,"MAX_PARALLEL_RENDER_LIMIT","","",null,null],[3,"TicTacToeRenderer","","Render a Tic-Tac-Toe board",null,null],[12,"background_pixmap","","",21,null],[12,"number_paths","","",21,null],[12,"render_semaphore","","",21,null],[11,"new","","Make a new [<code>TicTacToeRenderer</code>].",21,[[],["result",6]]],[11,"render_board","","Render a Tic-Tac-Toe board with <code>tiny_skia</code>.",21,[[["tictactoestate",3]],[["result",6],["vec",3]]]],[11,"render_board_async","","Render a Tic-Tac-Toe board on a threadpool",21,[[["tictactoestate",3]]]],[3,"SkiaBuilder","","Utility to draw a font glyph to a path.",null,null],[12,"0","","",22,null],[11,"new","","Make a new [<code>SkiaBuilder</code>].",22,[[]]],[11,"into_path","","Get the inner [<code>tiny_skia::Path</code>].",22,[[],[["option",4],["path",3]]]],[7,"BOARD_COMMAND","pikadick::commands::tic_tac_toe","",null,null],[7,"CONCEDE_COMMAND","","",null,null],[7,"PLAY_COMMAND","","",null,null],[4,"CreateGameError","","Error that may occur while creating a game.",null,null],[13,"AuthorInGame","","The author is in a game",23,null],[13,"OpponentInGame","","The opponent is in a game",23,null],[4,"TryMoveError","","Error that may occur while performing a game move.",null,null],[13,"InvalidTurn","","It is not the user\'s turn",24,null],[13,"InvalidMove","","The move is invalid",24,null],[4,"TryMoveResponse","","The response for making a move.",null,null],[13,"Winner","","",25,null],[12,"game","pikadick::commands::tic_tac_toe::TryMoveResponse","",26,null],[12,"winner","","",26,null],[12,"loser","","",26,null],[13,"Tie","pikadick::commands::tic_tac_toe","",25,null],[12,"game","pikadick::commands::tic_tac_toe::TryMoveResponse","",27,null],[13,"NextTurn","pikadick::commands::tic_tac_toe","",25,null],[12,"game","pikadick::commands::tic_tac_toe::TryMoveResponse","",28,null],[6,"GameStateKey","pikadick::commands::tic_tac_toe","A [<code>GuildId</code>]/[<code>UserId</code>] key to a [<code>GameState</code>].",null,null],[6,"ShareGameState","","A [<code>GameState</code>] that is wrapped in a mutex and sharable via …",null,null],[3,"TicTacToeData","","Data pertaining to running tic_tac_toe games",null,null],[12,"game_states","","",29,null],[12,"ai","","",29,null],[12,"renderer","","",29,null],[11,"new","","Make a new [<code>TicTacToeData</code>].",29,[[]]],[11,"get_game_state","","Get a game state for a [<code>GameStateKey</code>].",29,[[["gamestatekey",6]],[["option",4],["sharegamestate",6]]]],[11,"remove_game_state","","Remove a [<code>GameState</code>] by key. Returns the [<code>ShareGameState</code>] …",29,[[["option",4],["userid",3],["guildid",3]],[["option",4],["sharegamestate",6]]]],[11,"create_game","","Create a new [<code>GameState</code>].",29,[[["option",4],["userid",3],["tictactoeteam",4],["gameplayer",4],["guildid",3]],[["result",4],["sharegamestate",6],["creategameerror",4]]]],[11,"try_move","","Try to make a move.",29,[[["option",4],["u8",15],["userid",3],["sharegamestate",6],["guildid",3]],[["result",4],["trymoveresponse",4],["trymoveerror",4]]]],[3,"GameState","","A Tic-Tac-Toe game.",null,null],[12,"state","","The Game state",30,null],[12,"x_player","","The X player",30,null],[12,"o_player","","The O player",30,null],[11,"iter_players","","Iterate over all [<code>GamePlayer</code>]s.",30,[[]]],[11,"get_team_turn","","Get whos turn it is",30,[[],["tictactoeteam",4]]],[11,"get_player_turn","","Get the player whos turn it is",30,[[],["gameplayer",4]]],[11,"try_move","","Try to make a move. Returns true if successful.",30,[[["tictactoeteam",4],["u8",15]],["bool",15]]],[11,"get_opponent","","Get the opponent of the given user in this [<code>GameState</code>].",30,[[["gameplayer",4]],[["option",4],["gameplayer",4]]]],[11,"get_player","","Get the player for the given team.",30,[[["tictactoeteam",4]],["gameplayer",4]]],[3,"InvalidGamePlayer","","",null,null],[4,"GamePlayer","","A player of Tic-Tac-Toe",null,null],[13,"Computer","","User",31,null],[13,"User","","A User",31,null],[11,"into_user_id","","Try to convert this into a [<code>UserId</code>].",31,[[],[["userid",3],["option",4]]]],[11,"is_computer","","Check if this player is a computer",31,[[],["bool",15]]],[11,"mention","","Get the \\\"mention\\\" for a user.",31,[[],["gameplayermention",3]]],[3,"GamePlayerMention","","",null,null],[12,"0","","",32,null],[7,"TIC_TAC_TOE_COMMAND_OPTIONS","","",null,null],[7,"TIC_TAC_TOE_COMMAND","","",null,null],[5,"tic_tac_toe","","",null,[[["context",3],["args",3],["message",3]],[["commandresult",6],["boxfuture",6]]]],[0,"urban","pikadick::commands","",null,null],[3,"UrbanClient","pikadick::commands::urban","A Caching Urban Dictionary Client",null,null],[12,"client","","",33,null],[12,"search_cache","","",33,null],[11,"new","","Make a new [<code>UrbanClient</code>].",33,[[],["urbanclient",3]]],[11,"search","","Get the top result for a query.",33,[[["str",15]]]],[7,"URBAN_COMMAND_OPTIONS","","",null,null],[7,"URBAN_COMMAND","","",null,null],[5,"urban","","",null,[[["context",3],["args",3],["message",3]],[["commandresult",6],["boxfuture",6]]]],[0,"uwuify","pikadick::commands","",null,null],[17,"FACES","pikadick::commands::uwuify","",null,null],[7,"UWUIFY_COMMAND_OPTIONS","","",null,null],[7,"UWUIFY_COMMAND","","",null,null],[5,"uwuify","","",null,[[["context",3],["args",3],["message",3]],[["commandresult",6],["boxfuture",6]]]],[5,"uwuify_str","","A rust-optimized version of:",null,[[["str",15]],["string",3]]],[0,"vaporwave","pikadick::commands","",null,null],[7,"VAPORWAVE_COMMAND_OPTIONS","pikadick::commands::vaporwave","",null,null],[7,"VAPORWAVE_COMMAND","","",null,null],[5,"vaporwave","","",null,[[["context",3],["args",3],["message",3]],[["commandresult",6],["boxfuture",6]]]],[5,"vaporwave_str","","",null,[[["str",15]],["string",3]]],[0,"xkcd","pikadick::commands","",null,null],[7,"XKCD_COMMAND_OPTIONS","pikadick::commands::xkcd","",null,null],[7,"XKCD_COMMAND","","",null,null],[5,"xkcd","","",null,[[["context",3],["args",3],["message",3]],[["commandresult",6],["boxfuture",6]]]],[0,"zalgo","pikadick::commands","",null,null],[7,"ZALGO_COMMAND_OPTIONS","pikadick::commands::zalgo","",null,null],[7,"ZALGO_COMMAND","","",null,null],[5,"zalgo","","",null,[[["context",3],["args",3],["message",3]],[["commandresult",6],["boxfuture",6]]]],[0,"config","pikadick","",null,null],[5,"default_prefix","pikadick::config","",null,[[],["string",3]]],[3,"Config","","",null,null],[12,"token","","",34,null],[12,"prefix","","",34,null],[12,"status","","",34,null],[12,"data_dir","","",34,null],[12,"fml","","",34,null],[12,"extra","","",34,null],[3,"FmlConfig","","",null,null],[12,"key","","",35,null],[12,"extra","","",35,null],[11,"token","","",34,[[],["str",15]]],[11,"prefix","","",34,[[],["str",15]]],[11,"status_name","","",34,[[],[["option",4],["str",15]]]],[11,"status_url","","",34,[[],[["option",4],["str",15]]]],[11,"status_type","","",34,[[],[["option",4],["activitykind",4]]]],[11,"data_dir","","",34,[[],["path",3]]],[11,"fml","","",34,[[],["fmlconfig",3]]],[11,"load_from_path","","Load a config from a path",34,[[["path",3]],["result",6]]],[11,"load_from_bytes","","Load a config from bytes",34,[[],["result",6]]],[11,"validate","","Validate a config",34,[[],[["vec",3],["validationmessage",3]]]],[11,"key","","",35,[[],["str",15]]],[3,"StatusConfig","","",null,null],[12,"kind","","",36,null],[12,"name","","",36,null],[12,"url","","",36,null],[12,"extra","","",36,null],[4,"ActivityKind","","",null,null],[13,"Listening","","",37,null],[13,"Playing","","",37,null],[13,"Streaming","","",37,null],[3,"ValidationMessage","","",null,null],[12,"severity","","",38,null],[12,"error","","",38,null],[11,"severity","","",38,[[],["severity",4]]],[11,"error","","",38,[[],["validationerror",4]]],[4,"ValidationError","","",null,null],[13,"InvalidToken","","",39,null],[13,"MissingStatusType","","",39,null],[13,"MissingStreamUrl","","",39,null],[13,"Generic","","",39,null],[4,"Severity","","",null,null],[13,"Warn","","",40,null],[13,"Error","","",40,null],[0,"database","pikadick","",null,null],[6,"BincodeError","pikadick::database","Bincode Error type-alias",null,null],[5,"make_key","","Turn a prefix + key into  a key for the k/v store.",null,[[],[["vec",3],["u8",15]]]],[3,"Database","","The database",null,null],[12,"db","","",41,null],[11,"new","","",41,[[["bool",15],["path",3]]]],[11,"get_store","","Gets the store by name.",41,[[["str",15]]]],[11,"disable_command","","Sets a command as disabled if disabled is true",41,[[["str",15],["bool",15],["guildid",3]]]],[11,"get_disabled_commands","","Get disabled commands as a set",41,[[["guildid",3]]]],[11,"create_default_guild_info","","Create the default guild entry for the given GuildId",41,[[["guildid",3]]]],[5,"get_disabled_commands","","",null,[[["sqlite",3],["transaction",3],["guildid",3]]]],[3,"Store","","K/V Store",null,null],[12,"db","","",42,null],[12,"prefix","","",42,null],[11,"new","","",42,[[["sqlitepool",6],["string",3]]]],[11,"get","","Save a key in the store",42,[[["asref",8]]]],[11,"put","","Put a key in the store",42,[[["serialize",8],["asref",8]]]],[0,"logger","pikadick","",null,null],[4,"DelayWriterInner","pikadick::logger","The mut impl of a DelayWriter",null,null],[13,"Buffer","","The buffered data.",43,null],[13,"File","","The file being written to.",43,null],[11,"new","","Make a new DelayWriterInner with an empty buffer",43,[[]]],[11,"init","","Try to init this DelayWriterInner with a file. Will …",43,[[["file",3]],[["error",3],["result",4]]]],[3,"DelayWriter","","A writer that buffers data until it is assigned a file to …",null,null],[12,"0","","",44,null],[11,"new","","Create a new DelayWriter",44,[[]]],[11,"init","","Try to init this DelayWriter",44,[[["file",3]],[["error",3],["result",4]]]],[5,"setup","","Try to setup a logger",null,[[],[["delaywriter",3],["result",6]]]],[0,"util","pikadick","",null,null],[17,"DEFAULT_EXPIRE_TIME","pikadick::util","10 minutes",null,null],[3,"TimedCache","","A cache with entries that \\\"expire\\\" after a per-cache time …",null,null],[12,"0","","",45,null],[3,"TimedCacheInner","","",null,null],[12,"cache","","",46,null],[12,"last_trim","","",46,null],[12,"trim_time","","",46,null],[12,"expiry_time","","",46,null],[11,"new","","Create a cache with timed entries with a default expire …",45,[[]]],[11,"get_if_fresh","","Get a value if fresh, or None if it doesn\'t exist or is …",45,[[],[["option",4],["arc",3]]]],[11,"insert","","Insert a K/V",45,[[]]],[11,"trim","","Trims expired entries",45,[[],["bool",15]]],[11,"force_trim","","Trims expired entries, ignoring last trim time.",45,[[]]],[11,"len","","Gets the number of entries. Includes expired entries.",45,[[],["usize",15]]],[11,"is_empty","","Checks if cache is empty. Included expired entries.",45,[[],["bool",15]]],[3,"TimedCacheEntry","","",null,null],[12,"data","","",47,null],[12,"last_update","","",47,null],[11,"is_fresh","","time is expire time",47,[[["duration",3]],["bool",15]]],[11,"data","","Get data ref",47,[[]]],[17,"LOADING_EMOJI","","",null,null],[17,"OK_EMOJI","","",null,null],[17,"ERR_EMOJI","","",null,null],[3,"LoadingReaction","","This type attaches to a message and displays a loading …",null,null],[12,"http","","",48,null],[12,"channel_id","","",48,null],[12,"msg_id","","",48,null],[12,"sent_reaction","","",48,null],[11,"new","","Create a Loading Reaction attatched to a message.",48,[[["arc",3],["http",3],["message",3]]]],[11,"send_reaction","","",48,[[["into",8],["reactiontype",4]]]],[11,"send_ok","","",48,[[]]],[11,"send_fail","","",48,[[]]],[3,"Handler","pikadick","",null,null],[3,"ClientDataKey","","",null,null],[7,"HELP__OPTIONS","","",null,null],[7,"HELP","","",null,null],[5,"help","","",null,[[["message",3],["hashset",3],["context",3],["helpoptions",3],["userid",3],["args",3]],[["commandresult",6],["boxfuture",6]]]],[7,"GENERAL_GROUP_OPTIONS","","",null,null],[7,"GENERAL_GROUP","","",null,null],[3,"General","","",null,null],[5,"handle_ctrl_c","","",null,[[["arc",3],["mutex",3]]]],[5,"after_handler","","",null,[[["commandresult",6],["context",3],["str",15],["message",3]],["boxfuture",6]]],[5,"unrecognised_command_handler","","",null,[[["context",3],["str",15],["message",3]],["boxfuture",6]]],[5,"process_dispatch_error","","",null,[[["context",3],["dispatcherror",4],["message",3]],["boxfuture",6]]],[5,"process_dispatch_error_future","","",null,[[["context",3],["dispatcherror",4],["message",3]]]],[5,"main","","Main Entry",null,[[]]],[11,"from","pikadick::checks::enabled","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[],["usize",15]]],[11,"deref","","",0,[[["usize",15]]]],[11,"deref_mut","","",0,[[["usize",15]]]],[11,"drop","","",0,[[["usize",15]]]],[11,"from","pikadick::client_data","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[],["usize",15]]],[11,"deref","","",1,[[["usize",15]]]],[11,"deref_mut","","",1,[[["usize",15]]]],[11,"drop","","",1,[[["usize",15]]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[],["usize",15]]],[11,"deref","","",3,[[["usize",15]]]],[11,"deref_mut","","",3,[[["usize",15]]]],[11,"drop","","",3,[[["usize",15]]]],[11,"from","pikadick::commands::deviantart","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[],["usize",15]]],[11,"deref","","",4,[[["usize",15]]]],[11,"deref_mut","","",4,[[["usize",15]]]],[11,"drop","","",4,[[["usize",15]]]],[11,"from","pikadick::commands::fml","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[],["usize",15]]],[11,"deref","","",5,[[["usize",15]]]],[11,"deref_mut","","",5,[[["usize",15]]]],[11,"drop","","",5,[[["usize",15]]]],[11,"from","pikadick::commands::nekos","",49,[[]]],[11,"into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"init","","",49,[[],["usize",15]]],[11,"deref","","",49,[[["usize",15]]]],[11,"deref_mut","","",49,[[["usize",15]]]],[11,"drop","","",49,[[["usize",15]]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from_str","","",50,[[["str",15]],[["pin",3],["box",3]]]],[11,"parse","","",50,[[["message",3],["context",3],["str",15]],[["box",3],["pin",3]]]],[11,"vzip","","",50,[[]]],[11,"init","","",50,[[],["usize",15]]],[11,"deref","","",50,[[["usize",15]]]],[11,"deref_mut","","",50,[[["usize",15]]]],[11,"drop","","",50,[[["usize",15]]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[],["usize",15]]],[11,"deref","","",6,[[["usize",15]]]],[11,"deref_mut","","",6,[[["usize",15]]]],[11,"drop","","",6,[[["usize",15]]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"init","","",7,[[],["usize",15]]],[11,"deref","","",7,[[["usize",15]]]],[11,"deref_mut","","",7,[[["usize",15]]]],[11,"drop","","",7,[[["usize",15]]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"init","","",8,[[],["usize",15]]],[11,"deref","","",8,[[["usize",15]]]],[11,"deref_mut","","",8,[[["usize",15]]]],[11,"drop","","",8,[[["usize",15]]]],[11,"from","pikadick::commands::quizizz","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"init","","",9,[[],["usize",15]]],[11,"deref","","",9,[[["usize",15]]]],[11,"deref_mut","","",9,[[["usize",15]]]],[11,"drop","","",9,[[["usize",15]]]],[11,"from","pikadick::commands::r6stats","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"init","","",10,[[],["usize",15]]],[11,"deref","","",10,[[["usize",15]]]],[11,"deref_mut","","",10,[[["usize",15]]]],[11,"drop","","",10,[[["usize",15]]]],[11,"from","pikadick::commands::r6tracker","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"init","","",11,[[],["usize",15]]],[11,"deref","","",11,[[["usize",15]]]],[11,"deref_mut","","",11,[[["usize",15]]]],[11,"drop","","",11,[[["usize",15]]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"init","","",12,[[],["usize",15]]],[11,"deref","","",12,[[["usize",15]]]],[11,"deref_mut","","",12,[[["usize",15]]]],[11,"drop","","",12,[[["usize",15]]]],[11,"from","pikadick::commands::reddit_embed","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"init","","",13,[[],["usize",15]]],[11,"deref","","",13,[[["usize",15]]]],[11,"deref_mut","","",13,[[["usize",15]]]],[11,"drop","","",13,[[["usize",15]]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"init","","",14,[[],["usize",15]]],[11,"deref","","",14,[[["usize",15]]]],[11,"deref_mut","","",14,[[["usize",15]]]],[11,"drop","","",14,[[["usize",15]]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"init","","",15,[[],["usize",15]]],[11,"deref","","",15,[[["usize",15]]]],[11,"deref_mut","","",15,[[["usize",15]]]],[11,"drop","","",15,[[["usize",15]]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"init","","",16,[[],["usize",15]]],[11,"deref","","",16,[[["usize",15]]]],[11,"deref_mut","","",16,[[["usize",15]]]],[11,"drop","","",16,[[["usize",15]]]],[11,"from","pikadick::commands::rule34","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"init","","",17,[[],["usize",15]]],[11,"deref","","",17,[[["usize",15]]]],[11,"deref_mut","","",17,[[["usize",15]]]],[11,"drop","","",17,[[["usize",15]]]],[11,"from","pikadick::commands::shift","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"init","","",18,[[],["usize",15]]],[11,"deref","","",18,[[["usize",15]]]],[11,"deref_mut","","",18,[[["usize",15]]]],[11,"drop","","",18,[[["usize",15]]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from_str","","",19,[[["str",15]],[["pin",3],["box",3]]]],[11,"parse","","",19,[[["message",3],["context",3],["str",15]],[["box",3],["pin",3]]]],[11,"vzip","","",19,[[]]],[11,"init","","",19,[[],["usize",15]]],[11,"deref","","",19,[[["usize",15]]]],[11,"deref_mut","","",19,[[["usize",15]]]],[11,"drop","","",19,[[["usize",15]]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"init","","",20,[[],["usize",15]]],[11,"deref","","",20,[[["usize",15]]]],[11,"deref_mut","","",20,[[["usize",15]]]],[11,"drop","","",20,[[["usize",15]]]],[11,"from","pikadick::commands::tic_tac_toe::tic_tac_toe_renderer","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"init","","",21,[[],["usize",15]]],[11,"deref","","",21,[[["usize",15]]]],[11,"deref_mut","","",21,[[["usize",15]]]],[11,"drop","","",21,[[["usize",15]]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"init","","",22,[[],["usize",15]]],[11,"deref","","",22,[[["usize",15]]]],[11,"deref_mut","","",22,[[["usize",15]]]],[11,"drop","","",22,[[["usize",15]]]],[11,"from","pikadick::commands::tic_tac_toe","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"to_string","","",23,[[],["string",3]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"init","","",23,[[],["usize",15]]],[11,"deref","","",23,[[["usize",15]]]],[11,"deref_mut","","",23,[[["usize",15]]]],[11,"drop","","",23,[[["usize",15]]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"to_string","","",24,[[],["string",3]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"init","","",24,[[],["usize",15]]],[11,"deref","","",24,[[["usize",15]]]],[11,"deref_mut","","",24,[[["usize",15]]]],[11,"drop","","",24,[[["usize",15]]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"init","","",25,[[],["usize",15]]],[11,"deref","","",25,[[["usize",15]]]],[11,"deref_mut","","",25,[[["usize",15]]]],[11,"drop","","",25,[[["usize",15]]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"init","","",29,[[],["usize",15]]],[11,"deref","","",29,[[["usize",15]]]],[11,"deref_mut","","",29,[[["usize",15]]]],[11,"drop","","",29,[[["usize",15]]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"init","","",30,[[],["usize",15]]],[11,"deref","","",30,[[["usize",15]]]],[11,"deref_mut","","",30,[[["usize",15]]]],[11,"drop","","",30,[[["usize",15]]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"to_string","","",51,[[],["string",3]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"init","","",51,[[],["usize",15]]],[11,"deref","","",51,[[["usize",15]]]],[11,"deref_mut","","",51,[[["usize",15]]]],[11,"drop","","",51,[[["usize",15]]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from_str","","",31,[[["str",15]],[["pin",3],["box",3]]]],[11,"parse","","",31,[[["message",3],["context",3],["str",15]],[["box",3],["pin",3]]]],[11,"vzip","","",31,[[]]],[11,"equivalent","","",31,[[],["bool",15]]],[11,"get_hash","","",31,[[],["u64",15]]],[11,"init","","",31,[[],["usize",15]]],[11,"deref","","",31,[[["usize",15]]]],[11,"deref_mut","","",31,[[["usize",15]]]],[11,"drop","","",31,[[["usize",15]]]],[11,"get_hash","","",31,[[],["u64",15]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"to_string","","",32,[[],["string",3]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"init","","",32,[[],["usize",15]]],[11,"deref","","",32,[[["usize",15]]]],[11,"deref_mut","","",32,[[["usize",15]]]],[11,"drop","","",32,[[["usize",15]]]],[11,"from","pikadick::commands::urban","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"init","","",33,[[],["usize",15]]],[11,"deref","","",33,[[["usize",15]]]],[11,"deref_mut","","",33,[[["usize",15]]]],[11,"drop","","",33,[[["usize",15]]]],[11,"from","pikadick::config","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"init","","",34,[[],["usize",15]]],[11,"deref","","",34,[[["usize",15]]]],[11,"deref_mut","","",34,[[["usize",15]]]],[11,"drop","","",34,[[["usize",15]]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"init","","",35,[[],["usize",15]]],[11,"deref","","",35,[[["usize",15]]]],[11,"deref_mut","","",35,[[["usize",15]]]],[11,"drop","","",35,[[["usize",15]]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"init","","",36,[[],["usize",15]]],[11,"deref","","",36,[[["usize",15]]]],[11,"deref_mut","","",36,[[["usize",15]]]],[11,"drop","","",36,[[["usize",15]]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"equivalent","","",37,[[],["bool",15]]],[11,"init","","",37,[[],["usize",15]]],[11,"deref","","",37,[[["usize",15]]]],[11,"deref_mut","","",37,[[["usize",15]]]],[11,"drop","","",37,[[["usize",15]]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"init","","",38,[[],["usize",15]]],[11,"deref","","",38,[[["usize",15]]]],[11,"deref_mut","","",38,[[["usize",15]]]],[11,"drop","","",38,[[["usize",15]]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_string","","",39,[[],["string",3]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"init","","",39,[[],["usize",15]]],[11,"deref","","",39,[[["usize",15]]]],[11,"deref_mut","","",39,[[["usize",15]]]],[11,"drop","","",39,[[["usize",15]]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"init","","",40,[[],["usize",15]]],[11,"deref","","",40,[[["usize",15]]]],[11,"deref_mut","","",40,[[["usize",15]]]],[11,"drop","","",40,[[["usize",15]]]],[11,"from","pikadick::database","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"init","","",41,[[],["usize",15]]],[11,"deref","","",41,[[["usize",15]]]],[11,"deref_mut","","",41,[[["usize",15]]]],[11,"drop","","",41,[[["usize",15]]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"init","","",42,[[],["usize",15]]],[11,"deref","","",42,[[["usize",15]]]],[11,"deref_mut","","",42,[[["usize",15]]]],[11,"drop","","",42,[[["usize",15]]]],[11,"from","pikadick::logger","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"init","","",43,[[],["usize",15]]],[11,"deref","","",43,[[["usize",15]]]],[11,"deref_mut","","",43,[[["usize",15]]]],[11,"drop","","",43,[[["usize",15]]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"init","","",44,[[],["usize",15]]],[11,"deref","","",44,[[["usize",15]]]],[11,"deref_mut","","",44,[[["usize",15]]]],[11,"drop","","",44,[[["usize",15]]]],[11,"from","pikadick::util","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"init","","",45,[[],["usize",15]]],[11,"deref","","",45,[[["usize",15]]]],[11,"deref_mut","","",45,[[["usize",15]]]],[11,"drop","","",45,[[["usize",15]]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"init","","",46,[[],["usize",15]]],[11,"deref","","",46,[[["usize",15]]]],[11,"deref_mut","","",46,[[["usize",15]]]],[11,"drop","","",46,[[["usize",15]]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"init","","",47,[[],["usize",15]]],[11,"deref","","",47,[[["usize",15]]]],[11,"deref_mut","","",47,[[["usize",15]]]],[11,"drop","","",47,[[["usize",15]]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"init","","",48,[[],["usize",15]]],[11,"deref","","",48,[[["usize",15]]]],[11,"deref_mut","","",48,[[["usize",15]]]],[11,"drop","","",48,[[["usize",15]]]],[11,"from","pikadick","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"init","","",52,[[],["usize",15]]],[11,"deref","","",52,[[["usize",15]]]],[11,"deref_mut","","",52,[[["usize",15]]]],[11,"drop","","",52,[[["usize",15]]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"init","","",53,[[],["usize",15]]],[11,"deref","","",53,[[["usize",15]]]],[11,"deref_mut","","",53,[[["usize",15]]]],[11,"drop","","",53,[[["usize",15]]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"init","","",54,[[],["usize",15]]],[11,"deref","","",54,[[["usize",15]]]],[11,"deref_mut","","",54,[[["usize",15]]]],[11,"drop","","",54,[[["usize",15]]]],[11,"publish_cache_stats","pikadick::commands::deviantart","",4,[[["cachestatsbuilder",3]]]],[11,"publish_cache_stats","pikadick::commands::fml","",5,[[["cachestatsbuilder",3]]]],[11,"publish_cache_stats","pikadick::commands::nekos","",8,[[["cachestatsbuilder",3]]]],[11,"publish_cache_stats","pikadick::commands::r6stats","",10,[[["cachestatsbuilder",3]]]],[11,"publish_cache_stats","pikadick::commands::r6tracker","",12,[[["cachestatsbuilder",3]]]],[11,"publish_cache_stats","pikadick::commands::reddit_embed","",14,[[["cachestatsbuilder",3]]]],[11,"publish_cache_stats","pikadick::commands::rule34","",17,[[["cachestatsbuilder",3]]]],[11,"publish_cache_stats","pikadick::commands::shift","",20,[[["cachestatsbuilder",3]]]],[11,"publish_cache_stats","pikadick::commands::urban","",33,[[["cachestatsbuilder",3]]]],[11,"drop","pikadick::util","",48,[[]]],[11,"from","pikadick::commands::reddit_embed","",15,[[["redditerror",4]]]],[11,"from","","",16,[[["tubeerror",4]]]],[11,"clone","pikadick::checks::enabled","",0,[[],["enabledcheckdata",3]]],[11,"clone","pikadick::commands::deviantart","",4,[[],["deviantartclient",3]]],[11,"clone","pikadick::commands::fml","",5,[[],["fmlclient",3]]],[11,"clone","pikadick::commands::nekos","",6,[[],["cache",3]]],[11,"clone","","",8,[[],["nekosclient",3]]],[11,"clone","pikadick::commands::quizizz","",9,[[],["quizizzclient",3]]],[11,"clone","pikadick::commands::r6stats","",10,[[],["r6statsclient",3]]],[11,"clone","pikadick::commands::r6tracker","",12,[[],["r6trackerclient",3]]],[11,"clone","pikadick::commands::reddit_embed","",14,[[],["redditembeddata",3]]],[11,"clone","pikadick::commands::rule34","",17,[[],["rule34client",3]]],[11,"clone","pikadick::commands::shift","",20,[[],["shiftclient",3]]],[11,"clone","pikadick::commands::tic_tac_toe::tic_tac_toe_renderer","",21,[[],["tictactoerenderer",3]]],[11,"clone","pikadick::commands::tic_tac_toe","",23,[[],["creategameerror",4]]],[11,"clone","","",24,[[],["trymoveerror",4]]],[11,"clone","","",25,[[],["trymoveresponse",4]]],[11,"clone","","",29,[[],["tictactoedata",3]]],[11,"clone","","",30,[[],["gamestate",3]]],[11,"clone","","",51,[[],["invalidgameplayer",3]]],[11,"clone","","",31,[[],["gameplayer",4]]],[11,"clone","","",32,[[],["gameplayermention",3]]],[11,"clone","pikadick::commands::urban","",33,[[],["urbanclient",3]]],[11,"clone","pikadick::config","",37,[[],["activitykind",4]]],[11,"clone","","",40,[[],["severity",4]]],[11,"clone","pikadick::database","",41,[[],["database",3]]],[11,"clone","pikadick::logger","",44,[[],["delaywriter",3]]],[11,"clone","pikadick::util","",45,[[]]],[11,"clone","pikadick","",53,[[],["clientdatakey",3]]],[11,"default","pikadick::checks::enabled","",0,[[],["enabledcheckdata",3]]],[11,"default","pikadick::client_data","",1,[[]]],[11,"default","pikadick::commands::deviantart","",4,[[],["deviantartclient",3]]],[11,"default","pikadick::commands::nekos","",6,[[]]],[11,"default","","",8,[[]]],[11,"default","pikadick::commands::quizizz","",9,[[],["quizizzclient",3]]],[11,"default","pikadick::commands::r6stats","",10,[[],["r6statsclient",3]]],[11,"default","pikadick::commands::r6tracker","",12,[[],["r6trackerclient",3]]],[11,"default","pikadick::commands::reddit_embed","",14,[[],["redditembeddata",3]]],[11,"default","pikadick::commands::rule34","",17,[[],["rule34client",3]]],[11,"default","pikadick::commands::shift","",20,[[],["shiftclient",3]]],[11,"default","pikadick::commands::tic_tac_toe::tic_tac_toe_renderer","",22,[[]]],[11,"default","pikadick::commands::tic_tac_toe","",29,[[]]],[11,"default","pikadick::commands::urban","",33,[[],["urbanclient",3]]],[11,"default","pikadick::config","",37,[[]]],[11,"default","pikadick::logger","",44,[[]]],[11,"default","pikadick::util","",45,[[]]],[11,"eq","pikadick::commands::tic_tac_toe","",31,[[["gameplayer",4]],["bool",15]]],[11,"ne","","",31,[[["gameplayer",4]],["bool",15]]],[11,"eq","pikadick::config","",37,[[["activitykind",4]],["bool",15]]],[11,"deref","pikadick::commands::reddit_embed","",13,[[],["regex",3]]],[11,"fmt","pikadick::checks::enabled","",0,[[["formatter",3]],["result",6]]],[11,"fmt","pikadick::client_data","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","pikadick::commands::deviantart","",4,[[["formatter",3]],["result",6]]],[11,"fmt","pikadick::commands::fml","",5,[[["formatter",3]],["result",6]]],[11,"fmt","pikadick::commands::nekos","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","pikadick::commands::quizizz","",9,[[["formatter",3]],["result",6]]],[11,"fmt","pikadick::commands::r6stats","",10,[[["formatter",3]],["result",6]]],[11,"fmt","pikadick::commands::r6tracker","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","pikadick::commands::reddit_embed","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","pikadick::commands::rule34","",17,[[["formatter",3]],["result",6]]],[11,"fmt","pikadick::commands::shift","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","pikadick::commands::tic_tac_toe::tic_tac_toe_renderer","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","pikadick::commands::tic_tac_toe","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","pikadick::commands::urban","",33,[[["formatter",3]],["result",6]]],[11,"fmt","pikadick::config","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","pikadick::database","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","pikadick::logger","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","pikadick::util","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","pikadick","",53,[[["formatter",3]],["result",6]]],[11,"fmt","pikadick::commands::reddit_embed","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","pikadick::commands::tic_tac_toe","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","pikadick::config","",39,[[["formatter",3]],["result",6]]],[11,"hash","pikadick::commands::tic_tac_toe","",31,[[]]],[11,"from_str","pikadick::commands::nekos","",50,[[["str",15]],["result",4]]],[11,"from_str","pikadick::commands::shift","",19,[[["str",15]],["result",4]]],[11,"from_str","pikadick::commands::tic_tac_toe","",31,[[["str",15]],["result",4]]],[11,"source","pikadick::commands::reddit_embed","",15,[[],[["error",8],["option",4]]]],[11,"source","","",16,[[],[["error",8],["option",4]]]],[11,"write","pikadick::logger","",43,[[],[["result",6],["usize",15]]]],[11,"flush","","",43,[[],["result",6]]],[11,"write_all","","",43,[[],["result",6]]],[11,"write","","",44,[[],[["result",6],["usize",15]]]],[11,"flush","","",44,[[],["result",6]]],[11,"write_all","","",44,[[],["result",6]]],[11,"serialize","pikadick::config","",37,[[],["result",4]]],[11,"deserialize","","",34,[[],["result",4]]],[11,"deserialize","","",35,[[],["result",4]]],[11,"deserialize","","",36,[[],["result",4]]],[11,"deserialize","","",37,[[],["result",4]]],[11,"ready","pikadick","",52,[[["context",3],["ready",3]],[["box",3],["pin",3]]]],[11,"resume","","",52,[[["context",3],["resumedevent",3]],[["box",3],["pin",3]]]],[11,"message","","",52,[[["message",3],["context",3]],[["box",3],["pin",3]]]],[11,"initialize","pikadick::commands::reddit_embed","",13,[[]]],[11,"move_to","pikadick::commands::tic_tac_toe::tic_tac_toe_renderer","",22,[[["f32",15]]]],[11,"line_to","","",22,[[["f32",15]]]],[11,"quad_to","","",22,[[["f32",15]]]],[11,"curve_to","","",22,[[["f32",15]]]],[11,"close","","",22,[[]]]],"p":[[3,"EnabledCheckData"],[3,"CacheStatsBuilder"],[8,"CacheStatsProvider"],[3,"ClientData"],[3,"DeviantartClient"],[3,"FmlClient"],[3,"Cache"],[3,"CacheInner"],[3,"NekosClient"],[3,"QuizizzClient"],[3,"R6StatsClient"],[3,"Stats"],[3,"R6TrackerClient"],[3,"URL_REGEX"],[3,"RedditEmbedData"],[4,"GetPostError"],[4,"GetVideoDataError"],[3,"Rule34Client"],[3,"GameParseError"],[3,"GameArg"],[3,"ShiftClient"],[3,"TicTacToeRenderer"],[3,"SkiaBuilder"],[4,"CreateGameError"],[4,"TryMoveError"],[4,"TryMoveResponse"],[13,"Winner"],[13,"Tie"],[13,"NextTurn"],[3,"TicTacToeData"],[3,"GameState"],[4,"GamePlayer"],[3,"GamePlayerMention"],[3,"UrbanClient"],[3,"Config"],[3,"FmlConfig"],[3,"StatusConfig"],[4,"ActivityKind"],[3,"ValidationMessage"],[4,"ValidationError"],[4,"Severity"],[3,"Database"],[3,"Store"],[4,"DelayWriterInner"],[3,"DelayWriter"],[3,"TimedCache"],[3,"TimedCacheInner"],[3,"TimedCacheEntry"],[3,"LoadingReaction"],[3,"NsfwArgParseError"],[3,"NsfwArg"],[3,"InvalidGamePlayer"],[3,"Handler"],[3,"ClientDataKey"],[3,"General"]]},\
"quizizz":{"doc":"","i":[[0,"types","quizizz","Api Types",null,null],[3,"CheckRoomJsonRequest","quizizz::types","Check Room Request",null,null],[12,"room_code","","Room code",0,null],[3,"GenericResponse","","Api Response",null,null],[12,"cid","","Unknown",1,null],[12,"error","","Error",1,null],[12,"room","","Room Object",1,null],[12,"player","","Player Object",1,null],[12,"extra","","Other",1,null],[3,"GenericResponseError","","Api Response Error",null,null],[12,"message","","Error Message",2,null],[12,"kind","","Error Type",2,null],[12,"extra","","Other",2,null],[3,"Room","","A quiz Room",null,null],[12,"total_questions","","Total # of questions",3,null],[12,"questions","","List of question ids",3,null],[12,"assignments","","Unknown",3,null],[12,"deleted","","Whether quiz was deleted",3,null],[12,"created_at","","Creation date",3,null],[12,"unit_id","","Unit ID",3,null],[12,"hash","","Quiz hash",3,null],[12,"create_group","","Unknown",3,null],[12,"replay_of","","Unknown",3,null],[12,"reopenable","","Whether the quiz is reopenable",3,null],[12,"traits","","Quiz traits",3,null],[12,"host_id","","Host Id",3,null],[12,"started_at","","Started at",3,null],[12,"host_session_id","","Host Session ID",3,null],[12,"quiz_id","","Quiz ID",3,null],[12,"group_ids","","Group Ids",3,null],[12,"groups_info","","Groups info",3,null],[12,"version_id","","Version Id",3,null],[12,"total_players","","Total players",3,null],[12,"total_correct","","Total correct",3,null],[12,"expiry","","Expire interval",3,null],[12,"options","","Room options",3,null],[12,"version","","Versions",3,null],[12,"sim_game","","Whether this game is a simulation",3,null],[12,"course_id","","Course ID",3,null],[12,"assignment_title","","Assignment Title",3,null],[12,"is_shared","","Whether this room is shared",3,null],[12,"subscription","","Room subscription info",3,null],[12,"reopened","","Whether this was reopened",3,null],[12,"kind","","The type of room",3,null],[12,"experiment","","Unknown",3,null],[12,"collection_id","","Unknown",3,null],[12,"host_occupation","","Host Occupation",3,null],[12,"state","","Room state",3,null],[12,"total_answerable_questions","","The number of answerable questions",3,null],[12,"organization","","Organization",3,null],[12,"code","","Room Code",3,null],[12,"solo_apis","","Unknown",3,null],[12,"extra","","Other",3,null],[11,"is_running","","Whether this room is running",3,[[],["bool",15]]],[3,"Traits","","Traits",null,null],[12,"is_quiz_without_correct_answer","","Whether questions don\'t have correct answers",4,null],[12,"total_slides","","The # of slides",4,null],[12,"extra","","Other",4,null],[3,"GroupsInfo","","Groups Info",null,null],[12,"assigned","","Unknown",5,null],[12,"assigned_to","","Unknown",5,null],[12,"create","","Unknown",5,null],[12,"data","","Unknown",5,null],[12,"gcl","","Unknown",5,null],[12,"has_gcl","","Whether there is a gcl",5,null],[12,"mode","","Mode",5,null],[12,"extra","","Other",5,null],[3,"GroupsInfoData","","Groups Info Data",null,null],[12,"description","","Description",6,null],[12,"title","","Title",6,null],[12,"extra","","Other",6,null],[3,"RoomOptions","","Room Options",null,null],[12,"jumble","","Unknown",7,null],[12,"jumble_answers","","Unknown",7,null],[12,"limit_attempts","","Attempt Limit",7,null],[12,"powerups","","Whether powerups are enabled",7,null],[12,"memes","","Whether memes are enabled",7,null],[12,"show_answers","","Whether answers are shown",7,null],[12,"show_answers_2","","Show Answers as str",7,null],[12,"student_quiz_review","","Whether it is a student review",7,null],[12,"student_quiz_review_2","","Wtudent quiz review as str",7,null],[12,"timer","","Whether there is a timer",7,null],[12,"student_music","","Whether there is music",7,null],[12,"student_leaderboard","","Whether there is a student leaderboard",7,null],[12,"redemption","","Whether redemption is active",7,null],[12,"login_required","","Whether login is required",7,null],[12,"nickname_generator","","Whether nickname generator is used",7,null],[12,"extra","","Other",7,null],[3,"RoomVersion","","Room Version Info",null,null],[12,"kind","","Type",8,null],[12,"version","","Version number",8,null],[12,"extra","","Other",8,null],[3,"RoomSubscription","","Room subscription info",null,null],[12,"ads_free","","Whether it is ads free",9,null],[12,"branding","","Unknown",9,null],[12,"player_limit","","The player limit",9,null],[12,"trial_end_at","","When the trial ends",9,null],[12,"extra","","Other",9,null],[3,"Client","quizizz","A quizizz Client",null,null],[6,"QResult","","Library Result",null,null],[4,"QError","","Library Error",null,null],[13,"Reqwest","","Reqwest HTTP Error",10,null],[13,"InvalidStatus","","Invalid HTTP Status",10,null],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","quizizz::types","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","quizizz","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",10,[[["error",3]]]],[11,"clone","","",11,[[],["client",3]]],[11,"default","","",11,[[]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","quizizz::types","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","quizizz","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"source","","",10,[[],[["error",8],["option",4]]]],[11,"serialize","quizizz::types","",0,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"serialize","","",4,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"serialize","","",6,[[],["result",4]]],[11,"serialize","","",7,[[],["result",4]]],[11,"serialize","","",8,[[],["result",4]]],[11,"serialize","","",9,[[],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"deserialize","","",5,[[],["result",4]]],[11,"deserialize","","",6,[[],["result",4]]],[11,"deserialize","","",7,[[],["result",4]]],[11,"deserialize","","",8,[[],["result",4]]],[11,"deserialize","","",9,[[],["result",4]]],[11,"new","quizizz","Make a new client",11,[[]]],[11,"check_room","","Check if the room code exists",11,[[["str",15]]]]],"p":[[3,"CheckRoomJsonRequest"],[3,"GenericResponse"],[3,"GenericResponseError"],[3,"Room"],[3,"Traits"],[3,"GroupsInfo"],[3,"GroupsInfoData"],[3,"RoomOptions"],[3,"RoomVersion"],[3,"RoomSubscription"],[4,"QError"],[3,"Client"]]},\
"r6stats":{"doc":"","i":[[0,"client","r6stats","",null,null],[3,"Client","r6stats::client","An R6Stats client",null,null],[11,"new","","Make a new client",0,[[]]],[11,"search","","Search for a PC user\'s profile by name.",0,[[["str",15]]]],[0,"types","r6stats","",null,null],[0,"search_data","r6stats::types","",null,null],[0,"generic_stats","r6stats::types::search_data","",null,null],[3,"GenericStats","r6stats::types::search_data::generic_stats","",null,null],[12,"gamemode","","",1,null],[12,"general","","",1,null],[12,"queue","","",1,null],[12,"timestamps","","",1,null],[12,"unknown","","",1,null],[3,"GameMode","","",null,null],[12,"bomb","","",2,null],[12,"hostage","","",2,null],[12,"secure_area","","",2,null],[12,"unknown","","",2,null],[3,"Bomb","","",null,null],[12,"best_score","","",3,null],[12,"games_played","","",3,null],[12,"losses","","",3,null],[12,"playtime","","",3,null],[12,"wins","","",3,null],[12,"wl","","",3,null],[12,"unknown","","",3,null],[3,"Hostage","","",null,null],[12,"best_score","","",4,null],[12,"extractions_denied","","",4,null],[12,"games_played","","",4,null],[12,"losses","","",4,null],[12,"playtime","","",4,null],[12,"wins","","",4,null],[12,"wl","","",4,null],[12,"unknown","","",4,null],[3,"SecureArea","","",null,null],[12,"best_score","","",5,null],[12,"games_played","","",5,null],[12,"kills_as_attacker_in_objective","","",5,null],[12,"kills_as_defender_in_objective","","",5,null],[12,"losses","","",5,null],[12,"playtime","","",5,null],[12,"times_objective_secured","","",5,null],[12,"wins","","",5,null],[12,"wl","","",5,null],[12,"unknown","","",5,null],[3,"General","","",null,null],[12,"assists","","",6,null],[12,"barricades_deployed","","",6,null],[12,"blind_kills","","",6,null],[12,"bullets_fired","","",6,null],[12,"bullets_hit","","",6,null],[12,"dbnos","","",6,null],[12,"deaths","","",6,null],[12,"distance_travelled","","",6,null],[12,"draws","","",6,null],[12,"gadgets_destroyed","","",6,null],[12,"games_played","","",6,null],[12,"headshots","","",6,null],[12,"kd","","",6,null],[12,"kills","","",6,null],[12,"losses","","",6,null],[12,"melee_kills","","",6,null],[12,"penetration_kills","","",6,null],[12,"playtime","","",6,null],[12,"rappel_breaches","","",6,null],[12,"reinforcements_deployed","","",6,null],[12,"revives","","",6,null],[12,"suicides","","",6,null],[12,"wins","","",6,null],[12,"wl","","",6,null],[12,"unknown","","",6,null],[3,"Queue","","",null,null],[12,"casual","","",7,null],[12,"other","","",7,null],[12,"ranked","","",7,null],[12,"unknown","","",7,null],[3,"QueueStat","","",null,null],[12,"deaths","","",8,null],[12,"draws","","",8,null],[12,"games_played","","",8,null],[12,"kd","","",8,null],[12,"kills","","",8,null],[12,"losses","","",8,null],[12,"playtime","","",8,null],[12,"wins","","",8,null],[12,"wl","","",8,null],[12,"unknown","","",8,null],[3,"Timestamps","","",null,null],[12,"created","","",9,null],[12,"last_updated","","",9,null],[12,"unknown","","",9,null],[3,"ApiResponse","r6stats::types::search_data","Api Response",null,null],[12,"data","","",10,null],[3,"UserData","","User Data",null,null],[12,"avatar_banned","","",11,null],[12,"avatar_url_146","","",11,null],[12,"avatar_url_256","","",11,null],[12,"claimed","","",11,null],[12,"generic_stats","","",11,null],[12,"last_updated","","",11,null],[12,"platform","","",11,null],[12,"progression_stats","","",11,null],[12,"seasonal_stats","","",11,null],[12,"ubisoft_id","","",11,null],[12,"uplay_id","","",11,null],[12,"username","","",11,null],[12,"unknown","","",11,null],[11,"kd","","",11,[[],[["f64",15],["option",4]]]],[11,"wl","","",11,[[],[["f64",15],["option",4]]]],[11,"mmr","","",11,[[],[["u32",15],["option",4]]]],[3,"ProgressionStats","","",null,null],[12,"level","","",12,null],[12,"lootbox_probability","","",12,null],[12,"total_xp","","",12,null],[12,"unknown","","",12,null],[3,"SeasonalStats","","",null,null],[12,"abandons","","",13,null],[12,"champions_rank_position","","",13,null],[12,"created_at","","",13,null],[12,"created_for_date","","",13,null],[12,"deaths","","",13,null],[12,"kills","","",13,null],[12,"last_match_mmr_change","","",13,null],[12,"last_match_skill_mean_change","","",13,null],[12,"last_match_skill_standard_deviation_change","","",13,null],[12,"losses","","",13,null],[12,"max_mmr","","",13,null],[12,"max_rank","","",13,null],[12,"mmr","","",13,null],[12,"next_rank_mmr","","",13,null],[12,"prev_rank_mmr","","",13,null],[12,"rank","","",13,null],[12,"region","","",13,null],[12,"skill_mean","","",13,null],[12,"skill_standard_deviation","","",13,null],[12,"updated_at","","",13,null],[12,"wins","","",13,null],[12,"unknown","","",13,null],[6,"R6Result","r6stats","Library Result Type",null,null],[4,"Error","","Library Error Type",null,null],[13,"Reqwest","","Reqwest HTTP Error",14,null],[13,"Json","","Json Error",14,null],[11,"from","r6stats::client","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","r6stats::types::search_data::generic_stats","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","r6stats::types::search_data","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","r6stats","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",14,[[["error",3]]]],[11,"from","","",14,[[["error",3]]]],[11,"clone","r6stats::client","",0,[[],["client",3]]],[11,"default","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","r6stats::types::search_data::generic_stats","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","r6stats::types::search_data","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","r6stats","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"source","","",14,[[],[["option",4],["error",8]]]],[11,"serialize","r6stats::types::search_data::generic_stats","",1,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"serialize","","",4,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"serialize","","",6,[[],["result",4]]],[11,"serialize","","",7,[[],["result",4]]],[11,"serialize","","",8,[[],["result",4]]],[11,"serialize","","",9,[[],["result",4]]],[11,"serialize","r6stats::types::search_data","",10,[[],["result",4]]],[11,"serialize","","",11,[[],["result",4]]],[11,"serialize","","",12,[[],["result",4]]],[11,"serialize","","",13,[[],["result",4]]],[11,"deserialize","r6stats::types::search_data::generic_stats","",1,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"deserialize","","",5,[[],["result",4]]],[11,"deserialize","","",6,[[],["result",4]]],[11,"deserialize","","",7,[[],["result",4]]],[11,"deserialize","","",8,[[],["result",4]]],[11,"deserialize","","",9,[[],["result",4]]],[11,"deserialize","r6stats::types::search_data","",10,[[],["result",4]]],[11,"deserialize","","",11,[[],["result",4]]],[11,"deserialize","","",12,[[],["result",4]]],[11,"deserialize","","",13,[[],["result",4]]]],"p":[[3,"Client"],[3,"GenericStats"],[3,"GameMode"],[3,"Bomb"],[3,"Hostage"],[3,"SecureArea"],[3,"General"],[3,"Queue"],[3,"QueueStat"],[3,"Timestamps"],[3,"ApiResponse"],[3,"UserData"],[3,"ProgressionStats"],[3,"SeasonalStats"],[4,"Error"]]},\
"r6tracker":{"doc":"","i":[[0,"types","r6tracker","",null,null],[0,"overwolf","r6tracker::types","Overwolf API Types",null,null],[0,"lifetime_stats","r6tracker::types::overwolf","Overwolf Lifetime Stats",null,null],[3,"LifetimeStats","r6tracker::types::overwolf::lifetime_stats","Player Lifetime Stats",null,null],[12,"best_mmr","","Best MMR Stats",0,null],[12,"win_pct","","Win Percent",0,null],[12,"wins","","Total # of wins",0,null],[12,"kd","","Total K/D",0,null],[12,"kills","","Total # of kills",0,null],[12,"matches","","Total # of matches",0,null],[12,"headshot_pct","","Total headshot %",0,null],[12,"headshots","","Total # of headshots",0,null],[12,"melee_kills","","Total # of melee kills",0,null],[12,"blind_kills","","Total # of blind kills",0,null],[12,"deaths","","Total # of deaths",0,null],[12,"losses","","Total # of losses",0,null],[12,"xp","","Total # of XP",0,null],[12,"unknown","","Unknown keys",0,null],[3,"BestMmr","","Best Overwolf Lifetime MMR",null,null],[12,"mmr","","MMR",1,null],[12,"name","","Rank Name",1,null],[12,"img","","Rank Image URL",1,null],[12,"unknown","","Unknown Keys",1,null],[3,"InvalidOverwolfResponseError","r6tracker::types::overwolf","The error that occurs when an OverwolfResponse is in an …",null,null],[12,"0","","",2,null],[4,"OverwolfResponse","","A Json Overwolf Response",null,null],[13,"Valid","","A Valid response",3,null],[13,"Invalid","","An Invalid Response",3,null],[11,"into_result","","Turn this into a Result.",3,[[],[["result",4],["invalidoverwolfresponseerror",3]]]],[11,"get_valid","","Get the valid member as an Option.",3,[[],["option",4]]],[11,"take_valid","","Take the valid member, consuming this struct. Same …",3,[[],["option",4]]],[3,"OverwolfPlayer","","An Overwolf Player",null,null],[12,"player_id","","Player ID",4,null],[12,"name","","Player name",4,null],[12,"avatar","","Avatar URL",4,null],[12,"level","","Player Level",4,null],[12,"is_premium","","Probably r6tracker premium",4,null],[12,"suspected_cheater","","Whether this person is a suspected cheater",4,null],[12,"current_season","","The current season",4,null],[12,"current_season_best_region","","Current season best region stats",4,null],[12,"lifetime_stats","","Lifetime Stats",4,null],[12,"seasons","","All seasonal stats",4,null],[12,"operators","","Operator Stats",4,null],[12,"seasonal_operators","","Seasonal Operator Stats",4,null],[12,"unknown","","Unknown keys",4,null],[11,"get_current_casual_season","","Get the current casual season stats for this user",4,[[],[["option",4],["overwolfseason",3]]]],[11,"iter_ranked_seasons","","Iterate over ranked seasons",4,[[]]],[11,"iter_placed_ranked_seasons","","Iterate over ranked seasons where the user placed",4,[[]]],[11,"get_max_season","","Get the season with the max mmr",4,[[],[["option",4],["overwolfseason",3]]]],[11,"get_lifetime_ranked_kd","","Get the lifetime K/D for ranked",4,[[],["f64",15]]],[11,"get_lifetime_ranked_win_pct","","Get lifetime ranked win %",4,[[],["f64",15]]],[3,"OverwolfSeason","","Seasonal stats. This may also represent hidden casual …",null,null],[12,"rank_name","","The rank name",5,null],[12,"img","","Season image URL",5,null],[12,"season","","Season #",5,null],[12,"region","","Season Region",5,null],[12,"region_label","","The label of the region",5,null],[12,"mmr","","MMR",5,null],[12,"win_pct","","Win Percent",5,null],[12,"wins","","The # of wins this season",5,null],[12,"kd","","The K/D this season",5,null],[12,"kills","","The # of kills this season",5,null],[12,"matches","","The # of matches this season",5,null],[12,"mmr_change","","Maybe the change in mmr this season?",5,null],[12,"is_ranked","","Whether this season represents a ranked season",5,null],[12,"max_mmr","","The max mmr for this season",5,null],[12,"current_rank","","Current Rank Info",5,null],[12,"max_rank","","Max Rank Info",5,null],[12,"prev_rank","","Previous Rank Info",5,null],[12,"next_rank","","Next Rank Info",5,null],[12,"unknown","","Unknown keys",5,null],[3,"OverwolfRank","","Overwolf Rank Info",null,null],[12,"rank_tier","","Unknown",6,null],[12,"mmr","","MMR",6,null],[12,"rank_icon","","The icon url for this rank",6,null],[12,"rank_name","","The name of this rank",6,null],[12,"unknown","","Unknown keys",6,null],[3,"OverwolfOperator","","An Overwolf Operator",null,null],[12,"name","","Operator name",7,null],[12,"img","","Operator Image",7,null],[12,"is_attack","","Whether this operator is attack",7,null],[12,"is_top_operator","","Whether this operator is this user\'s top operator",7,null],[12,"win_pct","","Win %",7,null],[12,"wins","","The total # of wins with this op",7,null],[12,"kd","","The K/D with this op",7,null],[12,"kills","","The total # of kills with this op",7,null],[12,"time_played_display","","The time played as a user-displayable string",7,null],[12,"time_played","","The time played (in seconds?)",7,null],[12,"unknown","","Unknown keys",7,null],[3,"SeasonalOperators","","Seasonal Operator data",null,null],[12,"operators","","Operator Stats",8,null],[12,"started_tracking","","Started tracking datetimestamp",8,null],[12,"unknown","","Unknown keys",8,null],[0,"platform","r6tracker::types","",null,null],[3,"InvalidPlatformCode","r6tracker::types::platform","Error when a u32 cannot be converted into a platform.",null,null],[12,"0","","",9,null],[4,"Platform","","The representation of a platform",null,null],[13,"Pc","","",10,null],[13,"Xbox","","",10,null],[13,"Ps4","","",10,null],[11,"as_u32","","Converts a platform into its code",10,[[],["u32",15]]],[11,"from_u32","","Tries to convert a u32 into a Platform",10,[[["u32",15]],[["result",4],["invalidplatformcode",3]]]],[0,"sessions_data","r6tracker::types","",null,null],[3,"SessionsData","r6tracker::types::sessions_data","",null,null],[12,"items","","",11,null],[12,"unknown","","",11,null],[3,"Session","","",null,null],[12,"started_at","","",12,null],[12,"ended_at","","",12,null],[12,"duration","","",12,null],[12,"is_active","","",12,null],[12,"matches","","",12,null],[12,"stats","","",12,null],[12,"unknown","","",12,null],[3,"Match","","",null,null],[12,"id","","",13,null],[12,"kind","","",13,null],[12,"metadata","","",13,null],[12,"stats","","",13,null],[12,"unknown","","",13,null],[0,"stat","r6tracker::types","Stat Data Type",null,null],[3,"Stat","r6tracker::types::stat","",null,null],[12,"metadata","","",14,null],[12,"value","","",14,null],[12,"percentile","","",14,null],[12,"rank","","",14,null],[12,"display_value","","",14,null],[12,"unknown","","",14,null],[11,"name","","",14,[[],["str",15]]],[11,"icon_url","","",14,[[],[["url",3],["option",4]]]],[3,"Metadata","","",null,null],[12,"key","","",15,null],[12,"name","","",15,null],[12,"category_key","","",15,null],[12,"category_name","","",15,null],[12,"description","","",15,null],[12,"is_reversed","","",15,null],[12,"icon_url","","",15,null],[12,"unknown","","",15,null],[0,"user_data","r6tracker::types","User Data Type",null,null],[0,"season","r6tracker::types::user_data","Season data type",null,null],[3,"Season","r6tracker::types::user_data::season","A representation of a ranked season/region",null,null],[12,"id","","",16,null],[12,"kind","","",16,null],[12,"metadata","","",16,null],[12,"stats","","",16,null],[12,"unknown","","",16,null],[11,"current_mmr","","Gets current mmr for this region in this season",16,[[],[["u32",15],["option",4]]]],[11,"wl","","Get Win / Loss this season/region",16,[[],[["f64",15],["option",4]]]],[11,"max_mmr","","Get the max mmr",16,[[],[["option",4],["u64",15]]]],[11,"max_rank","","Get the max rank",16,[[],[["rank",4],["option",4]]]],[3,"Metadata","","",null,null],[12,"name","","",17,null],[12,"segment","","",17,null],[12,"stats_category_order","","",17,null],[12,"unknown","","",17,null],[4,"ApiResponse","r6tracker::types::user_data","A json response from the UserData API.",null,null],[13,"Valid","","A Valid Response",18,null],[13,"Invalid","","An Invalid Response",18,null],[3,"InvalidApiResponseError","","",null,null],[12,"0","","",19,null],[3,"ApiError","","Errors that occured while procesing an API Request",null,null],[12,"message","","The error message",20,null],[11,"into_result","","Convert this into as Result.",18,[[],[["invalidapiresponseerror",3],["result",4]]]],[11,"take_valid","","Consume self and return the valid variant, or None.",18,[[],["option",4]]],[11,"take_invalid","","Consume self and return the invalid variant, or None.",18,[[],[["invalidapiresponseerror",3],["option",4]]]],[4,"Rank","","An R6 Rank.",null,null],[13,"Unranked","","",21,null],[13,"CopperV","","",21,null],[13,"CopperIV","","",21,null],[13,"CopperIII","","",21,null],[13,"CopperII","","",21,null],[13,"CopperI","","",21,null],[13,"BronzeV","","",21,null],[13,"BronzeIV","","",21,null],[13,"BronzeIII","","",21,null],[13,"BronzeII","","",21,null],[13,"BronzeI","","",21,null],[13,"SilverV","","",21,null],[13,"SilverIV","","",21,null],[13,"SilverIII","","",21,null],[13,"SilverII","","",21,null],[13,"SilverI","","",21,null],[13,"GoldIII","","",21,null],[13,"GoldII","","",21,null],[13,"GoldI","","",21,null],[13,"PlatinumIII","","",21,null],[13,"PlatinumII","","",21,null],[13,"PlatinumI","","",21,null],[13,"Diamond","","",21,null],[13,"Champion","","",21,null],[11,"name","","Get a string rep of this rank",21,[[],["str",15]]],[3,"UserData","","",null,null],[12,"id","","Unique user id",22,null],[12,"kind","","",22,null],[12,"children","","Collection of ranked seasons stats",22,null],[12,"metadata","","Metadata",22,null],[12,"stats","","A collection of all stats",22,null],[12,"unknown","","Unknown fields",22,null],[11,"current_mmr","","Gets top mmr from all servers.",22,[[],[["u32",15],["option",4]]]],[11,"current_mmr_image","","Get the image url for the rank this user is at gloablly",22,[[],[["url",3],["option",4]]]],[11,"current_mmr_america","","Get the MMR for this user.",22,[[],[["u32",15],["option",4]]]],[11,"season_color","","Gets this season\'s color as a string hex value",22,[[],["str",15]]],[11,"season_color_u32","","Tries to parse this season\'s hex color as a u32",22,[[],[["u32",15],["option",4]]]],[11,"get_kills","","Get total # of kills",22,[[],[["option",4],["u64",15]]]],[11,"get_deaths","","Get total # of deaths",22,[[],[["option",4],["u64",15]]]],[11,"kd","","Get overall K/D",22,[[],[["f64",15],["option",4]]]],[11,"wl","","Get Overall W/L",22,[[],[["f64",15],["option",4]]]],[11,"name","","Get user tag name",22,[[],["str",15]]],[11,"avatar_url","","Get user avatar url",22,[[],["url",3]]],[11,"get_latest_season","","Get the latest stats for the latest ranked region/season …",22,[[],[["option",4],["season",3]]]],[11,"get_max_season","","Get the season where the user attained their max ranking",22,[[],[["option",4],["season",3]]]],[3,"Metadata","","",null,null],[12,"account_id","","",23,null],[12,"country_code","","",23,null],[12,"current_season_color","","",23,null],[12,"current_season_name","","",23,null],[12,"latest_region","","",23,null],[12,"latest_season","","",23,null],[12,"picture_url","","",23,null],[12,"platform_id","","",23,null],[12,"platform_user_handle","","",23,null],[12,"segment_controls","","",23,null],[12,"stats_category_order","","",23,null],[12,"unknown","","",23,null],[3,"Client","r6tracker","R6tracker Client",null,null],[3,"StatusCode","","An HTTP status code (<code>status-code</code> in RFC 7230 et al.).",null,null],[6,"R6Result","","Result type",null,null],[4,"Error","","Error Type",null,null],[13,"Reqwest","","Reqwest HTTP error",24,null],[13,"InvalidStatus","","Invalid HTTP Status",24,null],[13,"Json","","Json Error",24,null],[13,"Url","","Url Parse Error",24,null],[13,"InvalidApiResponse","","An API Response returned an error",24,null],[13,"InvalidOverwolfResponse","","An Overwolf Response returned an error.",24,null],[13,"InvalidNameLength","","Too short of a name was provided. The member is the …",24,null],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","r6tracker::types::overwolf::lifetime_stats","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","r6tracker::types::overwolf","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","r6tracker::types::platform","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"equivalent","","",10,[[],["bool",15]]],[11,"from","r6tracker::types::sessions_data","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","r6tracker::types::stat","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","r6tracker::types::user_data::season","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","r6tracker::types::user_data","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_string","","",19,[[],["string",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_string","","",20,[[],["string",3]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"equivalent","","",21,[[],["bool",15]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","r6tracker","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"to_string","","",26,[[],["string",3]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"equivalent","","",26,[[],["bool",15]]],[11,"get_hash","","",26,[[],["u64",15]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_string","","",24,[[],["string",3]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"try_from","","",26,[[["str",15]],[["result",4],["statuscode",3]]]],[11,"try_from","","",26,[[["u16",15]],[["statuscode",3],["result",4]]]],[11,"try_from","","",26,[[],[["result",4],["statuscode",3]]]],[11,"fmt","","",26,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",26,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",26,[[]]],[11,"partial_cmp","","",26,[[["statuscode",3]],[["option",4],["ordering",4]]]],[11,"lt","","",26,[[["statuscode",3]],["bool",15]]],[11,"le","","",26,[[["statuscode",3]],["bool",15]]],[11,"gt","","",26,[[["statuscode",3]],["bool",15]]],[11,"ge","","",26,[[["statuscode",3]],["bool",15]]],[11,"from","","",26,[[["statuscode",3]],["statuscode",3]]],[11,"default","","",26,[[],["statuscode",3]]],[11,"clone","","",26,[[],["statuscode",3]]],[11,"cmp","","",26,[[["statuscode",3]],["ordering",4]]],[11,"from_str","","",26,[[["str",15]],[["result",4],["invalidstatuscode",3],["statuscode",3]]]],[11,"eq","","",26,[[["u16",15]],["bool",15]]],[11,"eq","","",26,[[["statuscode",3]],["bool",15]]],[11,"ne","","",26,[[["statuscode",3]],["bool",15]]],[11,"from","","",24,[[["error",3]]]],[11,"from","","",24,[[["error",3]]]],[11,"from","","",24,[[["parseerror",4]]]],[11,"from","","",24,[[["invalidapiresponseerror",3]]]],[11,"from","","",24,[[["invalidoverwolfresponseerror",3]]]],[11,"clone","","",25,[[],["client",3]]],[11,"clone","r6tracker::types::platform","",10,[[],["platform",4]]],[11,"clone","r6tracker::types::user_data","",21,[[],["rank",4]]],[11,"default","r6tracker","",25,[[]]],[11,"eq","r6tracker::types::platform","",10,[[["platform",4]],["bool",15]]],[11,"eq","r6tracker::types::user_data","",21,[[["rank",4]],["bool",15]]],[11,"fmt","r6tracker","",25,[[["formatter",3]],["result",6]]],[11,"fmt","r6tracker::types::overwolf::lifetime_stats","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","r6tracker::types::overwolf","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","r6tracker::types::platform","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","r6tracker::types::sessions_data","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","r6tracker::types::stat","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","r6tracker::types::user_data::season","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","r6tracker::types::user_data","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","r6tracker","",24,[[["formatter",3]],["result",6]]],[11,"fmt","r6tracker::types::overwolf","",2,[[["formatter",3]],["result",6]]],[11,"fmt","r6tracker::types::platform","",9,[[["formatter",3]],["result",6]]],[11,"fmt","r6tracker::types::user_data","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","r6tracker","",24,[[["formatter",3]],["result",6]]],[11,"try_from","r6tracker::types::platform","",10,[[["u32",15]],["result",4]]],[11,"source","r6tracker","",24,[[],[["option",4],["error",8]]]],[11,"serialize","r6tracker::types::overwolf::lifetime_stats","",0,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"serialize","r6tracker::types::overwolf","",4,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"serialize","","",6,[[],["result",4]]],[11,"serialize","","",7,[[],["result",4]]],[11,"serialize","","",8,[[],["result",4]]],[11,"serialize","r6tracker::types::platform","",10,[[],["result",4]]],[11,"serialize","r6tracker::types::sessions_data","",11,[[],["result",4]]],[11,"serialize","","",12,[[],["result",4]]],[11,"serialize","","",13,[[],["result",4]]],[11,"serialize","r6tracker::types::stat","",14,[[],["result",4]]],[11,"serialize","","",15,[[],["result",4]]],[11,"serialize","r6tracker::types::user_data::season","",16,[[],["result",4]]],[11,"serialize","","",17,[[],["result",4]]],[11,"serialize","r6tracker::types::user_data","",22,[[],["result",4]]],[11,"serialize","","",23,[[],["result",4]]],[11,"deserialize","r6tracker::types::overwolf::lifetime_stats","",0,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","r6tracker::types::overwolf","",3,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"deserialize","","",5,[[],["result",4]]],[11,"deserialize","","",6,[[],["result",4]]],[11,"deserialize","","",7,[[],["result",4]]],[11,"deserialize","","",8,[[],["result",4]]],[11,"deserialize","r6tracker::types::platform","",10,[[],["result",4]]],[11,"deserialize","r6tracker::types::sessions_data","",11,[[],["result",4]]],[11,"deserialize","","",12,[[],["result",4]]],[11,"deserialize","","",13,[[],["result",4]]],[11,"deserialize","r6tracker::types::stat","",14,[[],["result",4]]],[11,"deserialize","","",15,[[],["result",4]]],[11,"deserialize","r6tracker::types::user_data::season","",16,[[],["result",4]]],[11,"deserialize","","",17,[[],["result",4]]],[11,"deserialize","r6tracker::types::user_data","",20,[[],["result",4]]],[11,"deserialize","","",18,[[],["result",4]]],[11,"deserialize","","",22,[[],["result",4]]],[11,"deserialize","","",23,[[],["result",4]]],[11,"new","r6tracker","Make a new client",25,[[]]],[11,"get_profile","","Get an r6tracker profile",25,[[["platform",4],["str",15]]]],[11,"get_sessions","","Get the sessions for a user",25,[[["platform",4],["str",15]]]],[11,"get_overwolf_player","","Get player info using the Overwolf API.",25,[[["str",15]]]],[11,"from_u16","","Converts a u16 to a status code.",26,[[["u16",15]],[["result",4],["invalidstatuscode",3],["statuscode",3]]]],[11,"from_bytes","","Converts a &[u8] to a status code",26,[[],[["result",4],["invalidstatuscode",3],["statuscode",3]]]],[11,"as_u16","","Returns the <code>u16</code> corresponding to this <code>StatusCode</code>.",26,[[],["u16",15]]],[11,"as_str","","Returns a &str representation of the <code>StatusCode</code>",26,[[],["str",15]]],[11,"canonical_reason","","Get the standardised <code>reason-phrase</code> for this status code.",26,[[],[["option",4],["str",15]]]],[11,"is_informational","","Check if status is within 100-199.",26,[[],["bool",15]]],[11,"is_success","","Check if status is within 200-299.",26,[[],["bool",15]]],[11,"is_redirection","","Check if status is within 300-399.",26,[[],["bool",15]]],[11,"is_client_error","","Check if status is within 400-499.",26,[[],["bool",15]]],[11,"is_server_error","","Check if status is within 500-599.",26,[[],["bool",15]]],[18,"CONTINUE","","100 Continue [RFC7231, Section 6.2.1]",26,null],[18,"SWITCHING_PROTOCOLS","","101 Switching Protocols [RFC7231, Section 6.2.2]",26,null],[18,"PROCESSING","","102 Processing [RFC2518]",26,null],[18,"OK","","200 OK [RFC7231, Section 6.3.1]",26,null],[18,"CREATED","","201 Created [RFC7231, Section 6.3.2]",26,null],[18,"ACCEPTED","","202 Accepted [RFC7231, Section 6.3.3]",26,null],[18,"NON_AUTHORITATIVE_INFORMATION","","203 Non-Authoritative Information [RFC7231, Section 6.3.4]",26,null],[18,"NO_CONTENT","","204 No Content [RFC7231, Section 6.3.5]",26,null],[18,"RESET_CONTENT","","205 Reset Content [RFC7231, Section 6.3.6]",26,null],[18,"PARTIAL_CONTENT","","206 Partial Content [RFC7233, Section 4.1]",26,null],[18,"MULTI_STATUS","","207 Multi-Status [RFC4918]",26,null],[18,"ALREADY_REPORTED","","208 Already Reported [RFC5842]",26,null],[18,"IM_USED","","226 IM Used [RFC3229]",26,null],[18,"MULTIPLE_CHOICES","","300 Multiple Choices [RFC7231, Section 6.4.1]",26,null],[18,"MOVED_PERMANENTLY","","301 Moved Permanently [RFC7231, Section 6.4.2]",26,null],[18,"FOUND","","302 Found [RFC7231, Section 6.4.3]",26,null],[18,"SEE_OTHER","","303 See Other [RFC7231, Section 6.4.4]",26,null],[18,"NOT_MODIFIED","","304 Not Modified [RFC7232, Section 4.1]",26,null],[18,"USE_PROXY","","305 Use Proxy [RFC7231, Section 6.4.5]",26,null],[18,"TEMPORARY_REDIRECT","","307 Temporary Redirect [RFC7231, Section 6.4.7]",26,null],[18,"PERMANENT_REDIRECT","","308 Permanent Redirect [RFC7238]",26,null],[18,"BAD_REQUEST","","400 Bad Request [RFC7231, Section 6.5.1]",26,null],[18,"UNAUTHORIZED","","401 Unauthorized [RFC7235, Section 3.1]",26,null],[18,"PAYMENT_REQUIRED","","402 Payment Required [RFC7231, Section 6.5.2]",26,null],[18,"FORBIDDEN","","403 Forbidden [RFC7231, Section 6.5.3]",26,null],[18,"NOT_FOUND","","404 Not Found [RFC7231, Section 6.5.4]",26,null],[18,"METHOD_NOT_ALLOWED","","405 Method Not Allowed [RFC7231, Section 6.5.5]",26,null],[18,"NOT_ACCEPTABLE","","406 Not Acceptable [RFC7231, Section 6.5.6]",26,null],[18,"PROXY_AUTHENTICATION_REQUIRED","","407 Proxy Authentication Required [RFC7235, Section 3.2]",26,null],[18,"REQUEST_TIMEOUT","","408 Request Timeout [RFC7231, Section 6.5.7]",26,null],[18,"CONFLICT","","409 Conflict [RFC7231, Section 6.5.8]",26,null],[18,"GONE","","410 Gone [RFC7231, Section 6.5.9]",26,null],[18,"LENGTH_REQUIRED","","411 Length Required [RFC7231, Section 6.5.10]",26,null],[18,"PRECONDITION_FAILED","","412 Precondition Failed [RFC7232, Section 4.2]",26,null],[18,"PAYLOAD_TOO_LARGE","","413 Payload Too Large [RFC7231, Section 6.5.11]",26,null],[18,"URI_TOO_LONG","","414 URI Too Long [RFC7231, Section 6.5.12]",26,null],[18,"UNSUPPORTED_MEDIA_TYPE","","415 Unsupported Media Type [RFC7231, Section 6.5.13]",26,null],[18,"RANGE_NOT_SATISFIABLE","","416 Range Not Satisfiable [RFC7233, Section 4.4]",26,null],[18,"EXPECTATION_FAILED","","417 Expectation Failed [RFC7231, Section 6.5.14]",26,null],[18,"IM_A_TEAPOT","","418 I\'m a teapot [curiously not registered by IANA but …",26,null],[18,"MISDIRECTED_REQUEST","","421 Misdirected Request RFC7540, Section 9.1.2",26,null],[18,"UNPROCESSABLE_ENTITY","","422 Unprocessable Entity [RFC4918]",26,null],[18,"LOCKED","","423 Locked [RFC4918]",26,null],[18,"FAILED_DEPENDENCY","","424 Failed Dependency [RFC4918]",26,null],[18,"UPGRADE_REQUIRED","","426 Upgrade Required [RFC7231, Section 6.5.15]",26,null],[18,"PRECONDITION_REQUIRED","","428 Precondition Required [RFC6585]",26,null],[18,"TOO_MANY_REQUESTS","","429 Too Many Requests [RFC6585]",26,null],[18,"REQUEST_HEADER_FIELDS_TOO_LARGE","","431 Request Header Fields Too Large [RFC6585]",26,null],[18,"UNAVAILABLE_FOR_LEGAL_REASONS","","451 Unavailable For Legal Reasons [RFC7725]",26,null],[18,"INTERNAL_SERVER_ERROR","","500 Internal Server Error [RFC7231, Section 6.6.1]",26,null],[18,"NOT_IMPLEMENTED","","501 Not Implemented [RFC7231, Section 6.6.2]",26,null],[18,"BAD_GATEWAY","","502 Bad Gateway [RFC7231, Section 6.6.3]",26,null],[18,"SERVICE_UNAVAILABLE","","503 Service Unavailable [RFC7231, Section 6.6.4]",26,null],[18,"GATEWAY_TIMEOUT","","504 Gateway Timeout [RFC7231, Section 6.6.5]",26,null],[18,"HTTP_VERSION_NOT_SUPPORTED","","505 HTTP Version Not Supported [RFC7231, Section 6.6.6]",26,null],[18,"VARIANT_ALSO_NEGOTIATES","","506 Variant Also Negotiates [RFC2295]",26,null],[18,"INSUFFICIENT_STORAGE","","507 Insufficient Storage [RFC4918]",26,null],[18,"LOOP_DETECTED","","508 Loop Detected [RFC5842]",26,null],[18,"NOT_EXTENDED","","510 Not Extended [RFC2774]",26,null],[18,"NETWORK_AUTHENTICATION_REQUIRED","","511 Network Authentication Required [RFC6585]",26,null]],"p":[[3,"LifetimeStats"],[3,"BestMmr"],[3,"InvalidOverwolfResponseError"],[4,"OverwolfResponse"],[3,"OverwolfPlayer"],[3,"OverwolfSeason"],[3,"OverwolfRank"],[3,"OverwolfOperator"],[3,"SeasonalOperators"],[3,"InvalidPlatformCode"],[4,"Platform"],[3,"SessionsData"],[3,"Session"],[3,"Match"],[3,"Stat"],[3,"Metadata"],[3,"Season"],[3,"Metadata"],[4,"ApiResponse"],[3,"InvalidApiResponseError"],[3,"ApiError"],[4,"Rank"],[3,"UserData"],[3,"Metadata"],[4,"Error"],[3,"Client"],[3,"StatusCode"]]},\
"reddit_tube":{"doc":"","i":[[0,"types","reddit_tube","",null,null],[0,"get_video_response","reddit_tube::types","",null,null],[4,"GetVideoResponse","reddit_tube::types::get_video_response","The response for getting a video",null,null],[13,"Ok","","",0,null],[13,"Error","","",0,null],[3,"GetVideoResponseOk","","A good video response",null,null],[12,"affected","","",1,null],[12,"already_downloaded","","",1,null],[12,"file_hash","","",1,null],[12,"meme","","",1,null],[12,"meme_msg","","",1,null],[12,"points","","",1,null],[12,"thumbnail_name","","",1,null],[12,"share_url","","",1,null],[12,"short_id","","",1,null],[12,"url","","",1,null],[12,"user_email","","",1,null],[12,"user_hash","","",1,null],[12,"video_data","","",1,null],[12,"video_size","","",1,null],[12,"extra","","",1,null],[3,"VideoData","","Video Data",null,null],[12,"author","","Author",2,null],[12,"duration","","Video duration",2,null],[12,"has_audio","","Whether the post has audio",2,null],[12,"is_gif","","Whether the post is a gif",2,null],[12,"is_video","","Whether the post is a video",2,null],[12,"kind","","The post type?",2,null],[12,"nsfw","","Whether the post is nsfw",2,null],[12,"provider_name","","?",2,null],[12,"subreddit","","The subreddit",2,null],[12,"thumbnail","","The thumbnail url",2,null],[12,"title","","The post title",2,null],[12,"url","","The post url?",2,null],[12,"extra","","Unknown data",2,null],[3,"GetVideoResponseError","","Error video response",null,null],[12,"errores","","Errors",3,null],[12,"meme","","Meme",3,null],[12,"msg","","Error message",3,null],[12,"extra","","Unknown data",3,null],[0,"main_page","reddit_tube::types","",null,null],[4,"FromHtmlError","reddit_tube::types::main_page","Error that may occur while parsing a [<code>MainPage</code>] from [<code>Html</code>…",null,null],[13,"MissingDownloadForm","","missing download form",4,null],[13,"MissingCsrf","","Missing csrf data",4,null],[3,"MainPage","","The main page",null,null],[12,"csrf_key","","The csrf key",5,null],[12,"csrf_value","","The csrf value",5,null],[3,"Client","reddit_tube","Client",null,null],[3,"StatusCode","","An HTTP status code (<code>status-code</code> in RFC 7230 et al.).",null,null],[6,"TubeResult","","Result Type",null,null],[4,"TubeError","","Client Error",null,null],[13,"Reqwest","","HTTP Reqwest Error",6,null],[13,"InvalidStatus","","Invalid HTTP Status",6,null],[13,"Json","","invalid json parse",6,null],[13,"InvalidMainPage","","invalid main page",6,null],[13,"TokioJoin","","a tokio task failed",6,null],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","reddit_tube::types::get_video_response","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","reddit_tube::types::main_page","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","reddit_tube","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"equivalent","","",8,[[],["bool",15]]],[11,"get_hash","","",8,[[],["u64",15]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"try_from","","",8,[[["str",15]],[["result",4],["statuscode",3]]]],[11,"try_from","","",8,[[["u16",15]],[["statuscode",3],["result",4]]]],[11,"try_from","","",8,[[],[["result",4],["statuscode",3]]]],[11,"fmt","","",8,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",8,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",8,[[]]],[11,"partial_cmp","","",8,[[["statuscode",3]],[["option",4],["ordering",4]]]],[11,"lt","","",8,[[["statuscode",3]],["bool",15]]],[11,"le","","",8,[[["statuscode",3]],["bool",15]]],[11,"gt","","",8,[[["statuscode",3]],["bool",15]]],[11,"ge","","",8,[[["statuscode",3]],["bool",15]]],[11,"from","","",8,[[["statuscode",3]],["statuscode",3]]],[11,"default","","",8,[[],["statuscode",3]]],[11,"clone","","",8,[[],["statuscode",3]]],[11,"cmp","","",8,[[["statuscode",3]],["ordering",4]]],[11,"from_str","","",8,[[["str",15]],[["result",4],["statuscode",3],["invalidstatuscode",3]]]],[11,"eq","","",8,[[["u16",15]],["bool",15]]],[11,"eq","","",8,[[["statuscode",3]],["bool",15]]],[11,"ne","","",8,[[["statuscode",3]],["bool",15]]],[11,"from","","",6,[[["error",3]]]],[11,"from","","",6,[[["error",3]]]],[11,"from","","",6,[[["fromhtmlerror",4]]]],[11,"from","","",6,[[["joinerror",3]]]],[11,"clone","","",7,[[],["client",3]]],[11,"default","","",7,[[],["client",3]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","reddit_tube::types::get_video_response","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","reddit_tube::types::main_page","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","reddit_tube","",6,[[["formatter",3]],["result",6]]],[11,"fmt","reddit_tube::types::get_video_response","",3,[[["formatter",3]],["result",6]]],[11,"fmt","reddit_tube::types::main_page","",4,[[["formatter",3]],["result",6]]],[11,"fmt","reddit_tube","",6,[[["formatter",3]],["result",6]]],[11,"source","","",6,[[],[["option",4],["error",8]]]],[11,"deserialize","reddit_tube::types::get_video_response","",0,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"new","reddit_tube","Makes a new [<code>Client</code>].",7,[[]]],[11,"get_main_page","","Gets [<code>MainPage</code>] data.",7,[[]]],[11,"get_video","","Get a video for a reddit url.",7,[[["mainpage",3],["str",15]]]],[11,"from_u16","","Converts a u16 to a status code.",8,[[["u16",15]],[["result",4],["statuscode",3],["invalidstatuscode",3]]]],[11,"from_bytes","","Converts a &[u8] to a status code",8,[[],[["result",4],["statuscode",3],["invalidstatuscode",3]]]],[11,"as_u16","","Returns the <code>u16</code> corresponding to this <code>StatusCode</code>.",8,[[],["u16",15]]],[11,"as_str","","Returns a &str representation of the <code>StatusCode</code>",8,[[],["str",15]]],[11,"canonical_reason","","Get the standardised <code>reason-phrase</code> for this status code.",8,[[],[["option",4],["str",15]]]],[11,"is_informational","","Check if status is within 100-199.",8,[[],["bool",15]]],[11,"is_success","","Check if status is within 200-299.",8,[[],["bool",15]]],[11,"is_redirection","","Check if status is within 300-399.",8,[[],["bool",15]]],[11,"is_client_error","","Check if status is within 400-499.",8,[[],["bool",15]]],[11,"is_server_error","","Check if status is within 500-599.",8,[[],["bool",15]]],[18,"CONTINUE","","100 Continue [RFC7231, Section 6.2.1]",8,null],[18,"SWITCHING_PROTOCOLS","","101 Switching Protocols [RFC7231, Section 6.2.2]",8,null],[18,"PROCESSING","","102 Processing [RFC2518]",8,null],[18,"OK","","200 OK [RFC7231, Section 6.3.1]",8,null],[18,"CREATED","","201 Created [RFC7231, Section 6.3.2]",8,null],[18,"ACCEPTED","","202 Accepted [RFC7231, Section 6.3.3]",8,null],[18,"NON_AUTHORITATIVE_INFORMATION","","203 Non-Authoritative Information [RFC7231, Section 6.3.4]",8,null],[18,"NO_CONTENT","","204 No Content [RFC7231, Section 6.3.5]",8,null],[18,"RESET_CONTENT","","205 Reset Content [RFC7231, Section 6.3.6]",8,null],[18,"PARTIAL_CONTENT","","206 Partial Content [RFC7233, Section 4.1]",8,null],[18,"MULTI_STATUS","","207 Multi-Status [RFC4918]",8,null],[18,"ALREADY_REPORTED","","208 Already Reported [RFC5842]",8,null],[18,"IM_USED","","226 IM Used [RFC3229]",8,null],[18,"MULTIPLE_CHOICES","","300 Multiple Choices [RFC7231, Section 6.4.1]",8,null],[18,"MOVED_PERMANENTLY","","301 Moved Permanently [RFC7231, Section 6.4.2]",8,null],[18,"FOUND","","302 Found [RFC7231, Section 6.4.3]",8,null],[18,"SEE_OTHER","","303 See Other [RFC7231, Section 6.4.4]",8,null],[18,"NOT_MODIFIED","","304 Not Modified [RFC7232, Section 4.1]",8,null],[18,"USE_PROXY","","305 Use Proxy [RFC7231, Section 6.4.5]",8,null],[18,"TEMPORARY_REDIRECT","","307 Temporary Redirect [RFC7231, Section 6.4.7]",8,null],[18,"PERMANENT_REDIRECT","","308 Permanent Redirect [RFC7238]",8,null],[18,"BAD_REQUEST","","400 Bad Request [RFC7231, Section 6.5.1]",8,null],[18,"UNAUTHORIZED","","401 Unauthorized [RFC7235, Section 3.1]",8,null],[18,"PAYMENT_REQUIRED","","402 Payment Required [RFC7231, Section 6.5.2]",8,null],[18,"FORBIDDEN","","403 Forbidden [RFC7231, Section 6.5.3]",8,null],[18,"NOT_FOUND","","404 Not Found [RFC7231, Section 6.5.4]",8,null],[18,"METHOD_NOT_ALLOWED","","405 Method Not Allowed [RFC7231, Section 6.5.5]",8,null],[18,"NOT_ACCEPTABLE","","406 Not Acceptable [RFC7231, Section 6.5.6]",8,null],[18,"PROXY_AUTHENTICATION_REQUIRED","","407 Proxy Authentication Required [RFC7235, Section 3.2]",8,null],[18,"REQUEST_TIMEOUT","","408 Request Timeout [RFC7231, Section 6.5.7]",8,null],[18,"CONFLICT","","409 Conflict [RFC7231, Section 6.5.8]",8,null],[18,"GONE","","410 Gone [RFC7231, Section 6.5.9]",8,null],[18,"LENGTH_REQUIRED","","411 Length Required [RFC7231, Section 6.5.10]",8,null],[18,"PRECONDITION_FAILED","","412 Precondition Failed [RFC7232, Section 4.2]",8,null],[18,"PAYLOAD_TOO_LARGE","","413 Payload Too Large [RFC7231, Section 6.5.11]",8,null],[18,"URI_TOO_LONG","","414 URI Too Long [RFC7231, Section 6.5.12]",8,null],[18,"UNSUPPORTED_MEDIA_TYPE","","415 Unsupported Media Type [RFC7231, Section 6.5.13]",8,null],[18,"RANGE_NOT_SATISFIABLE","","416 Range Not Satisfiable [RFC7233, Section 4.4]",8,null],[18,"EXPECTATION_FAILED","","417 Expectation Failed [RFC7231, Section 6.5.14]",8,null],[18,"IM_A_TEAPOT","","418 I\'m a teapot [curiously not registered by IANA but …",8,null],[18,"MISDIRECTED_REQUEST","","421 Misdirected Request RFC7540, Section 9.1.2",8,null],[18,"UNPROCESSABLE_ENTITY","","422 Unprocessable Entity [RFC4918]",8,null],[18,"LOCKED","","423 Locked [RFC4918]",8,null],[18,"FAILED_DEPENDENCY","","424 Failed Dependency [RFC4918]",8,null],[18,"UPGRADE_REQUIRED","","426 Upgrade Required [RFC7231, Section 6.5.15]",8,null],[18,"PRECONDITION_REQUIRED","","428 Precondition Required [RFC6585]",8,null],[18,"TOO_MANY_REQUESTS","","429 Too Many Requests [RFC6585]",8,null],[18,"REQUEST_HEADER_FIELDS_TOO_LARGE","","431 Request Header Fields Too Large [RFC6585]",8,null],[18,"UNAVAILABLE_FOR_LEGAL_REASONS","","451 Unavailable For Legal Reasons [RFC7725]",8,null],[18,"INTERNAL_SERVER_ERROR","","500 Internal Server Error [RFC7231, Section 6.6.1]",8,null],[18,"NOT_IMPLEMENTED","","501 Not Implemented [RFC7231, Section 6.6.2]",8,null],[18,"BAD_GATEWAY","","502 Bad Gateway [RFC7231, Section 6.6.3]",8,null],[18,"SERVICE_UNAVAILABLE","","503 Service Unavailable [RFC7231, Section 6.6.4]",8,null],[18,"GATEWAY_TIMEOUT","","504 Gateway Timeout [RFC7231, Section 6.6.5]",8,null],[18,"HTTP_VERSION_NOT_SUPPORTED","","505 HTTP Version Not Supported [RFC7231, Section 6.6.6]",8,null],[18,"VARIANT_ALSO_NEGOTIATES","","506 Variant Also Negotiates [RFC2295]",8,null],[18,"INSUFFICIENT_STORAGE","","507 Insufficient Storage [RFC4918]",8,null],[18,"LOOP_DETECTED","","508 Loop Detected [RFC5842]",8,null],[18,"NOT_EXTENDED","","510 Not Extended [RFC2774]",8,null],[18,"NETWORK_AUTHENTICATION_REQUIRED","","511 Network Authentication Required [RFC6585]",8,null]],"p":[[4,"GetVideoResponse"],[3,"GetVideoResponseOk"],[3,"VideoData"],[3,"GetVideoResponseError"],[4,"FromHtmlError"],[3,"MainPage"],[4,"TubeError"],[3,"Client"],[3,"StatusCode"]]},\
"rule34":{"doc":"","i":[[3,"Client","rule34","A Rule34 Client",null,null],[4,"RuleError","","Crate Error Type",null,null],[13,"Reqwest","","Reqwest HTTP Error",0,null],[13,"InvalidUrl","","Invalid URL Error",0,null],[13,"InvalidStatus","","Invalid HTTP Status Code",0,null],[13,"Io","","IO Error",0,null],[13,"InvalidSearchResult","","Invalid Search Result",0,null],[13,"InvalidPost","","InvalidPost",0,null],[13,"TokioJoin","","A tokio task failed to complete",0,null],[6,"RuleResult","","The crate Result Type",null,null],[3,"Post","","A Post page",null,null],[12,"thumb_url","","Thumbnail Url",1,null],[12,"image_url","","Image URL",1,null],[3,"SearchResult","","Results for a search",null,null],[12,"entries","","Search result entries",2,null],[3,"Html","","An HTML tree.",null,null],[12,"errors","","Parse errors.",3,null],[12,"quirks_mode","","The quirks mode.",3,null],[12,"tree","","The node tree.",3,null],[5,"build_search_query","","Utility function to build a search query.",null,[[["iterator",8]],[["option",4],["string",3]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"equivalent","","",3,[[],["bool",15]]],[11,"fmt","","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"finish","","",3,[[],["html",3]]],[11,"parse_error","","",3,[[["cow",4],["str",15]]]],[11,"set_quirks_mode","","",3,[[["quirksmode",4]]]],[11,"get_document","","",3,[[]]],[11,"same_node","","",3,[[],["bool",15]]],[11,"elem_name","","",3,[[],["expandedname",3]]],[11,"create_element","","",3,[[["global",3],["attribute",3],["qualname",3],["vec",3],["elementflags",3]]]],[11,"create_comment","","",3,[[["tendril",3],["nonatomic",3],["utf8",3]]]],[11,"append_doctype_to_document","","",3,[[["tendril",3],["nonatomic",3],["utf8",3]]]],[11,"append","","",3,[[["nodeortext",4]]]],[11,"append_before_sibling","","",3,[[["nodeortext",4]]]],[11,"remove_from_parent","","",3,[[]]],[11,"reparent_children","","",3,[[]]],[11,"add_attrs_if_missing","","",3,[[["global",3],["attribute",3],["vec",3]]]],[11,"get_template_contents","","",3,[[]]],[11,"mark_script_already_started","","",3,[[]]],[11,"create_pi","","",3,[[["tendril",3],["nonatomic",3],["utf8",3]]]],[11,"append_based_on_parent_node","","",3,[[["nodeortext",4]]]],[11,"clone","","",3,[[],["html",3]]],[11,"eq","","",3,[[["html",3]],["bool",15]]],[11,"ne","","",3,[[["html",3]],["bool",15]]],[11,"from","","",0,[[["error",3]]]],[11,"from","","",0,[[["parseerror",4]]]],[11,"from","","",0,[[["error",3]]]],[11,"from","","",0,[[["joinerror",3]]]],[11,"clone","","",4,[[],["client",3]]],[11,"default","","",4,[[]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"source","","",0,[[],[["option",4],["error",8]]]],[11,"new","","Make a new [<code>Client</code>]",4,[[]]],[11,"get_text","","Send a GET web request to a <code>uri</code> and get the result as a […",4,[[["str",15]]]],[11,"get_html","","Send a GET web request to a <code>uri</code> and get the result as […",4,[[["str",15]]]],[11,"search","","Run a search for a <code>query</code>.",4,[[["str",15]]]],[11,"get_post","","Get a [<code>Post</code>] by <code>id</code>.",4,[[["u64",15]]]],[11,"get_to","","Send a GET web request to a <code>uri</code> and copy the result to …",4,[[["url",3]]]],[11,"from_html","","Try to make a [<code>Post</code>] from [<code>Html</code>].",1,[[["html",3]],[["fromhtmlerror",4],["result",4]]]],[11,"get_image_name","","Try to get the image name.",1,[[],[["option",4],["str",15]]]],[11,"from_html","","Try to make a [<code>SearchResult</code>] from [<code>Html</code>].",2,[[["html",3]],[["fromhtmlerror",4],["result",4]]]],[11,"new_document","","Creates an empty HTML document.",3,[[],["html",3]]],[11,"new_fragment","","Creates an empty HTML fragment.",3,[[],["html",3]]],[11,"parse_document","","Parses a string of HTML as a document.",3,[[["str",15]],["html",3]]],[11,"parse_fragment","","Parses a string of HTML as a fragment.",3,[[["str",15]],["html",3]]],[11,"select","","Returns an iterator over elements matching a selector.",3,[[["selector",3]],["select",3]]],[11,"root_element","","Returns the root <code><html></code> element.",3,[[],["elementref",3]]]],"p":[[4,"RuleError"],[3,"Post"],[3,"SearchResult"],[3,"Html"],[3,"Client"]]},\
"tiktock":{"doc":"","i":[[3,"PostUrl","tiktock","A url for tiktok post page",null,null],[3,"Html","","An HTML tree.",null,null],[12,"errors","","Parse errors.",0,null],[12,"quirks_mode","","The quirks mode.",0,null],[12,"tree","","The node tree.",0,null],[3,"OpenGraphObject","","An OpenGraphObject.",null,null],[12,"title","","Object Title",1,null],[12,"kind","","Object Type/Kind",1,null],[12,"image","","Object Image Url",1,null],[12,"url","","Object Permanent Url",1,null],[12,"audio_url","","Audio Url",1,null],[12,"description","","Object Description",1,null],[12,"video_url","","Video Url",1,null],[4,"Error","","Error Type",null,null],[13,"Reqwest","","Reqwest HTTP Error",2,null],[13,"InvalidStatus","","Invalid HTTP Status Code",2,null],[13,"TokioJoin","","A Tokio Task Panicked",2,null],[13,"InvalidOpenGraphObject","","Failed to parse an [<code>OpenGraphObject</code>].",2,null],[13,"Io","","Io Error",2,null],[3,"Client","","A tiktok client",null,null],[12,"client","","The inner HTTP client.",3,null],[11,"new","","Make a new [<code>Client</code>]",3,[[]]],[11,"get_post","","Get a tiktock post.",3,[[["posturl",3]]]],[11,"get_to","","Send a HTTP request to the url and copy the response to …",3,[[["str",15]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"equivalent","","",0,[[],["bool",15]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"equivalent","","",1,[[],["bool",15]]],[11,"get_hash","","",1,[[],["u64",15]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",1,[[]]],[11,"clone","","",1,[[],["opengraphobject",3]]],[11,"eq","","",1,[[["opengraphobject",3]],["bool",15]]],[11,"ne","","",1,[[["opengraphobject",3]],["bool",15]]],[11,"from_str","","",1,[[["str",15]],[["opengraphobject",3],["result",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"finish","","",0,[[],["html",3]]],[11,"parse_error","","",0,[[["cow",4],["str",15]]]],[11,"set_quirks_mode","","",0,[[["quirksmode",4]]]],[11,"get_document","","",0,[[]]],[11,"same_node","","",0,[[],["bool",15]]],[11,"elem_name","","",0,[[],["expandedname",3]]],[11,"create_element","","",0,[[["elementflags",3],["qualname",3],["vec",3],["attribute",3],["global",3]]]],[11,"create_comment","","",0,[[["utf8",3],["tendril",3],["nonatomic",3]]]],[11,"append_doctype_to_document","","",0,[[["utf8",3],["nonatomic",3],["tendril",3]]]],[11,"append","","",0,[[["nodeortext",4]]]],[11,"append_before_sibling","","",0,[[["nodeortext",4]]]],[11,"remove_from_parent","","",0,[[]]],[11,"reparent_children","","",0,[[]]],[11,"add_attrs_if_missing","","",0,[[["vec",3],["attribute",3],["global",3]]]],[11,"get_template_contents","","",0,[[]]],[11,"mark_script_already_started","","",0,[[]]],[11,"create_pi","","",0,[[["utf8",3],["nonatomic",3],["tendril",3]]]],[11,"append_based_on_parent_node","","",0,[[["nodeortext",4]]]],[11,"clone","","",0,[[],["html",3]]],[11,"eq","","",0,[[["html",3]],["bool",15]]],[11,"ne","","",0,[[["html",3]],["bool",15]]],[11,"from","","",2,[[["error",3]]]],[11,"from","","",2,[[["joinerror",3]]]],[11,"from","","",2,[[["fromhtmlerror",4]]]],[11,"from","","",2,[[["error",3]]]],[11,"clone","","",3,[[],["client",3]]],[11,"default","","",3,[[]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"source","","",2,[[],[["option",4],["error",8]]]],[11,"from_url","","Make a [<code>PostUrl</code>] from a [<code>Url</code>] or return the original url.",4,[[["url",3]],[["url",3],["result",4]]]],[11,"as_str","","Get this as a [<code>str</code>].",4,[[],["str",15]]],[11,"new_document","","Creates an empty HTML document.",0,[[],["html",3]]],[11,"new_fragment","","Creates an empty HTML fragment.",0,[[],["html",3]]],[11,"parse_document","","Parses a string of HTML as a document.",0,[[["str",15]],["html",3]]],[11,"parse_fragment","","Parses a string of HTML as a fragment.",0,[[["str",15]],["html",3]]],[11,"select","","Returns an iterator over elements matching a selector.",0,[[["selector",3]],["select",3]]],[11,"root_element","","Returns the root <code><html></code> element.",0,[[],["elementref",3]]],[11,"from_html","","Make a new [<code>OpenGraphObject</code>] from [<code>Html</code>].",1,[[["html",3]],[["result",4],["fromhtmlerror",4],["opengraphobject",3]]]],[11,"is_video","","Check whether this is a video",1,[[],["bool",15]]],[11,"is_image","","Check whether this is an image",1,[[],["bool",15]]],[11,"get_image_file_name","","Try to get the video url\'s file name",1,[[],[["str",15],["option",4]]]],[11,"get_video_url_file_name","","Try to get the video url\'s file name",1,[[],[["str",15],["option",4]]]]],"p":[[3,"Html"],[3,"OpenGraphObject"],[4,"Error"],[3,"Client"],[3,"PostUrl"]]},\
"urban_dictionary":{"doc":"","i":[[4,"Error","urban_dictionary","Library Error Type",null,null],[13,"Reqwest","","A Reqwest HTTP Error",0,null],[13,"Url","","URL Parse Error",0,null],[13,"InvalidStatus","","Invalid HTTP Status",0,null],[3,"Client","","Client",null,null],[11,"new","","Make a new [<code>Client</code>].",1,[[]]],[11,"lookup","","Lookup a term.",1,[[["str",15]]]],[3,"DefinitionList","","A List of [<code>Definition</code>].",null,null],[12,"list","","The inner list",2,null],[12,"unknown","","Unknown k/vs",2,null],[3,"Definition","","A [<code>Definition</code>] for a term.",null,null],[12,"author","","The author",3,null],[12,"current_vote","","The current votes for this",3,null],[12,"defid","","The definition id",3,null],[12,"definition","","The actual definition",3,null],[12,"example","","An example usage",3,null],[12,"permalink","","The definition permalink",3,null],[12,"sound_urls","","?",3,null],[12,"thumbs_down","","of thumbs down",3,null],[12,"thumbs_up","","of thumbs up",3,null],[12,"word","","The term",3,null],[12,"written_on","","Date written",3,null],[12,"unknown","","Unknown K/Vs",3,null],[11,"get_raw_definition","","Get the raw definition.",3,[[],["string",3]]],[11,"get_raw_example","","Get the raw example.",3,[[],["string",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",0,[[["error",3]]]],[11,"from","","",0,[[["parseerror",4]]]],[11,"clone","","",1,[[],["client",3]]],[11,"default","","",1,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"source","","",0,[[],[["option",4],["error",8]]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]]],"p":[[4,"Error"],[3,"Client"],[3,"DefinitionList"],[3,"Definition"]]},\
"xkcd":{"doc":"","i":[[4,"Error","xkcd","Library Error type",null,null],[13,"Reqwest","","Rewqwest HTTP Error",0,null],[13,"InvalidStatus","","Invalid HTTP StatusCode",0,null],[3,"Client","","An XKCD client",null,null],[11,"new","","Make a new [<code>Client</code>].",1,[[]]],[11,"get_random","","Get a random xkcd comic url.",1,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",0,[[["error",3]]]],[11,"clone","","",1,[[],["client",3]]],[11,"default","","",1,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"source","","",0,[[],[["error",8],["option",4]]]]],"p":[[4,"Error"],[3,"Client"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);