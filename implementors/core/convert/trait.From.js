(function() {var implementors = {};
implementors["deviantart"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/reqwest/0.11.2/reqwest/error/struct.Error.html\" title=\"struct reqwest::error::Error\">Error</a>&gt; for <a class=\"enum\" href=\"deviantart/enum.Error.html\" title=\"enum deviantart::Error\">Error</a>","synthetic":false,"types":["deviantart::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"https://docs.rs/url/2.2.1/url/parser/enum.ParseError.html\" title=\"enum url::parser::ParseError\">ParseError</a>&gt; for <a class=\"enum\" href=\"deviantart/enum.Error.html\" title=\"enum deviantart::Error\">Error</a>","synthetic":false,"types":["deviantart::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;JoinError&gt; for <a class=\"enum\" href=\"deviantart/enum.Error.html\" title=\"enum deviantart::Error\">Error</a>","synthetic":false,"types":["deviantart::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt; for <a class=\"enum\" href=\"deviantart/enum.Error.html\" title=\"enum deviantart::Error\">Error</a>","synthetic":false,"types":["deviantart::Error"]}];
implementors["fml"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/reqwest/0.11.2/reqwest/error/struct.Error.html\" title=\"struct reqwest::error::Error\">Error</a>&gt; for <a class=\"enum\" href=\"fml/enum.Error.html\" title=\"enum fml::Error\">Error</a>","synthetic":false,"types":["fml::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/serde_json/1.0.64/serde_json/error/struct.Error.html\" title=\"struct serde_json::error::Error\">Error</a>&gt; for <a class=\"enum\" href=\"fml/enum.Error.html\" title=\"enum fml::Error\">Error</a>","synthetic":false,"types":["fml::Error"]}];
implementors["insta"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"open_graph/client/enum.ClientError.html\" title=\"enum open_graph::client::ClientError\">ClientError</a>&gt; for <a class=\"enum\" href=\"insta/enum.InstaError.html\" title=\"enum insta::InstaError\">InstaError</a>","synthetic":false,"types":["insta::InstaError"]}];
implementors["minimax"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"minimax/tic_tac_toe/struct.InvalidCharError.html\" title=\"struct minimax::tic_tac_toe::InvalidCharError\">InvalidCharError</a>&gt; for <a class=\"enum\" href=\"minimax/tic_tac_toe/enum.InvalidStrError.html\" title=\"enum minimax::tic_tac_toe::InvalidStrError\">InvalidStrError</a>","synthetic":false,"types":["minimax::tic_tac_toe::InvalidStrError"]}];
implementors["nekos"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/reqwest/0.11.2/reqwest/error/struct.Error.html\" title=\"struct reqwest::error::Error\">Error</a>&gt; for <a class=\"enum\" href=\"nekos/enum.NekosError.html\" title=\"enum nekos::NekosError\">NekosError</a>","synthetic":false,"types":["nekos::NekosError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/serde_json/1.0.64/serde_json/error/struct.Error.html\" title=\"struct serde_json::error::Error\">Error</a>&gt; for <a class=\"enum\" href=\"nekos/enum.NekosError.html\" title=\"enum nekos::NekosError\">NekosError</a>","synthetic":false,"types":["nekos::NekosError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"https://docs.rs/url/2.2.1/url/parser/enum.ParseError.html\" title=\"enum url::parser::ParseError\">ParseError</a>&gt; for <a class=\"enum\" href=\"nekos/enum.NekosError.html\" title=\"enum nekos::NekosError\">NekosError</a>","synthetic":false,"types":["nekos::NekosError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt; for <a class=\"enum\" href=\"nekos/enum.NekosError.html\" title=\"enum nekos::NekosError\">NekosError</a>","synthetic":false,"types":["nekos::NekosError"]}];
implementors["open_graph"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/reqwest/0.11.2/reqwest/error/struct.Error.html\" title=\"struct reqwest::error::Error\">Error</a>&gt; for <a class=\"enum\" href=\"open_graph/client/enum.ClientError.html\" title=\"enum open_graph::client::ClientError\">ClientError</a>","synthetic":false,"types":["open_graph::client::ClientError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;JoinError&gt; for <a class=\"enum\" href=\"open_graph/client/enum.ClientError.html\" title=\"enum open_graph::client::ClientError\">ClientError</a>","synthetic":false,"types":["open_graph::client::ClientError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"open_graph/open_graph_object/enum.FromHtmlError.html\" title=\"enum open_graph::open_graph_object::FromHtmlError\">FromHtmlError</a>&gt; for <a class=\"enum\" href=\"open_graph/client/enum.ClientError.html\" title=\"enum open_graph::client::ClientError\">ClientError</a>","synthetic":false,"types":["open_graph::client::ClientError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt; for <a class=\"enum\" href=\"open_graph/client/enum.ClientError.html\" title=\"enum open_graph::client::ClientError\">ClientError</a>","synthetic":false,"types":["open_graph::client::ClientError"]}];
implementors["pikadick"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;RedditError&gt; for <a class=\"enum\" href=\"pikadick/commands/reddit_embed/enum.GetPostError.html\" title=\"enum pikadick::commands::reddit_embed::GetPostError\">GetPostError</a>","synthetic":false,"types":["pikadick::commands::reddit_embed::GetPostError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"reddit_tube/enum.TubeError.html\" title=\"enum reddit_tube::TubeError\">TubeError</a>&gt; for <a class=\"enum\" href=\"pikadick/commands/reddit_embed/enum.GetVideoDataError.html\" title=\"enum pikadick::commands::reddit_embed::GetVideoDataError\">GetVideoDataError</a>","synthetic":false,"types":["pikadick::commands::reddit_embed::GetVideoDataError"]}];
implementors["quizizz"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/reqwest/0.11.2/reqwest/error/struct.Error.html\" title=\"struct reqwest::error::Error\">Error</a>&gt; for <a class=\"enum\" href=\"quizizz/enum.QError.html\" title=\"enum quizizz::QError\">QError</a>","synthetic":false,"types":["quizizz::QError"]}];
implementors["r6stats"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/reqwest/0.11.2/reqwest/error/struct.Error.html\" title=\"struct reqwest::error::Error\">Error</a>&gt; for <a class=\"enum\" href=\"r6stats/enum.Error.html\" title=\"enum r6stats::Error\">Error</a>","synthetic":false,"types":["r6stats::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/serde_json/1.0.64/serde_json/error/struct.Error.html\" title=\"struct serde_json::error::Error\">Error</a>&gt; for <a class=\"enum\" href=\"r6stats/enum.Error.html\" title=\"enum r6stats::Error\">Error</a>","synthetic":false,"types":["r6stats::Error"]}];
implementors["r6tracker"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/reqwest/0.11.2/reqwest/error/struct.Error.html\" title=\"struct reqwest::error::Error\">Error</a>&gt; for <a class=\"enum\" href=\"r6tracker/enum.Error.html\" title=\"enum r6tracker::Error\">Error</a>","synthetic":false,"types":["r6tracker::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/serde_json/1.0.64/serde_json/error/struct.Error.html\" title=\"struct serde_json::error::Error\">Error</a>&gt; for <a class=\"enum\" href=\"r6tracker/enum.Error.html\" title=\"enum r6tracker::Error\">Error</a>","synthetic":false,"types":["r6tracker::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"https://docs.rs/url/2.2.1/url/parser/enum.ParseError.html\" title=\"enum url::parser::ParseError\">ParseError</a>&gt; for <a class=\"enum\" href=\"r6tracker/enum.Error.html\" title=\"enum r6tracker::Error\">Error</a>","synthetic":false,"types":["r6tracker::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"r6tracker/types/user_data/struct.InvalidApiResponseError.html\" title=\"struct r6tracker::types::user_data::InvalidApiResponseError\">InvalidApiResponseError</a>&gt; for <a class=\"enum\" href=\"r6tracker/enum.Error.html\" title=\"enum r6tracker::Error\">Error</a>","synthetic":false,"types":["r6tracker::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"r6tracker/types/overwolf/struct.InvalidOverwolfResponseError.html\" title=\"struct r6tracker::types::overwolf::InvalidOverwolfResponseError\">InvalidOverwolfResponseError</a>&gt; for <a class=\"enum\" href=\"r6tracker/enum.Error.html\" title=\"enum r6tracker::Error\">Error</a>","synthetic":false,"types":["r6tracker::Error"]}];
implementors["reddit_tube"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/reqwest/0.11.2/reqwest/error/struct.Error.html\" title=\"struct reqwest::error::Error\">Error</a>&gt; for <a class=\"enum\" href=\"reddit_tube/enum.TubeError.html\" title=\"enum reddit_tube::TubeError\">TubeError</a>","synthetic":false,"types":["reddit_tube::TubeError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/serde_json/1.0.64/serde_json/error/struct.Error.html\" title=\"struct serde_json::error::Error\">Error</a>&gt; for <a class=\"enum\" href=\"reddit_tube/enum.TubeError.html\" title=\"enum reddit_tube::TubeError\">TubeError</a>","synthetic":false,"types":["reddit_tube::TubeError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"reddit_tube/types/main_page/enum.FromHtmlError.html\" title=\"enum reddit_tube::types::main_page::FromHtmlError\">FromHtmlError</a>&gt; for <a class=\"enum\" href=\"reddit_tube/enum.TubeError.html\" title=\"enum reddit_tube::TubeError\">TubeError</a>","synthetic":false,"types":["reddit_tube::TubeError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;JoinError&gt; for <a class=\"enum\" href=\"reddit_tube/enum.TubeError.html\" title=\"enum reddit_tube::TubeError\">TubeError</a>","synthetic":false,"types":["reddit_tube::TubeError"]}];
implementors["rule34"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/reqwest/0.11.2/reqwest/error/struct.Error.html\" title=\"struct reqwest::error::Error\">Error</a>&gt; for <a class=\"enum\" href=\"rule34/enum.RuleError.html\" title=\"enum rule34::RuleError\">RuleError</a>","synthetic":false,"types":["rule34::error::RuleError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"https://docs.rs/url/2.2.1/url/parser/enum.ParseError.html\" title=\"enum url::parser::ParseError\">ParseError</a>&gt; for <a class=\"enum\" href=\"rule34/enum.RuleError.html\" title=\"enum rule34::RuleError\">RuleError</a>","synthetic":false,"types":["rule34::error::RuleError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt; for <a class=\"enum\" href=\"rule34/enum.RuleError.html\" title=\"enum rule34::RuleError\">RuleError</a>","synthetic":false,"types":["rule34::error::RuleError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;JoinError&gt; for <a class=\"enum\" href=\"rule34/enum.RuleError.html\" title=\"enum rule34::RuleError\">RuleError</a>","synthetic":false,"types":["rule34::error::RuleError"]}];
implementors["tiktock"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/reqwest/0.11.2/reqwest/error/struct.Error.html\" title=\"struct reqwest::error::Error\">Error</a>&gt; for <a class=\"enum\" href=\"tiktock/enum.Error.html\" title=\"enum tiktock::Error\">Error</a>","synthetic":false,"types":["tiktock::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;JoinError&gt; for <a class=\"enum\" href=\"tiktock/enum.Error.html\" title=\"enum tiktock::Error\">Error</a>","synthetic":false,"types":["tiktock::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"open_graph/open_graph_object/enum.FromHtmlError.html\" title=\"enum open_graph::open_graph_object::FromHtmlError\">FromHtmlError</a>&gt; for <a class=\"enum\" href=\"tiktock/enum.Error.html\" title=\"enum tiktock::Error\">Error</a>","synthetic":false,"types":["tiktock::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt; for <a class=\"enum\" href=\"tiktock/enum.Error.html\" title=\"enum tiktock::Error\">Error</a>","synthetic":false,"types":["tiktock::Error"]}];
implementors["urban_dictionary"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/reqwest/0.11.2/reqwest/error/struct.Error.html\" title=\"struct reqwest::error::Error\">Error</a>&gt; for <a class=\"enum\" href=\"urban_dictionary/enum.Error.html\" title=\"enum urban_dictionary::Error\">Error</a>","synthetic":false,"types":["urban_dictionary::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"https://docs.rs/url/2.2.1/url/parser/enum.ParseError.html\" title=\"enum url::parser::ParseError\">ParseError</a>&gt; for <a class=\"enum\" href=\"urban_dictionary/enum.Error.html\" title=\"enum urban_dictionary::Error\">Error</a>","synthetic":false,"types":["urban_dictionary::Error"]}];
implementors["xkcd"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/reqwest/0.11.2/reqwest/error/struct.Error.html\" title=\"struct reqwest::error::Error\">Error</a>&gt; for <a class=\"enum\" href=\"xkcd/enum.Error.html\" title=\"enum xkcd::Error\">Error</a>","synthetic":false,"types":["xkcd::Error"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()